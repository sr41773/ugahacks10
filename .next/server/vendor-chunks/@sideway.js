"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@sideway";
exports.ids = ["vendor-chunks/@sideway"];
exports.modules = {

/***/ "(rsc)/./node_modules/@sideway/address/lib/domain.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sideway/address/lib/domain.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nconst Url = __webpack_require__(/*! url */ \"url\");\n\nconst Errors = __webpack_require__(/*! ./errors */ \"(rsc)/./node_modules/@sideway/address/lib/errors.js\");\n\n\nconst internals = {\n    minDomainSegments: 2,\n    nonAsciiRx: /[^\\x00-\\x7f]/,\n    domainControlRx: /[\\x00-\\x20@\\:\\/\\\\#!\\$&\\'\\(\\)\\*\\+,;=\\?]/,                          // Control + space + separators\n    tldSegmentRx: /^[a-zA-Z](?:[a-zA-Z0-9\\-]*[a-zA-Z0-9])?$/,\n    domainSegmentRx: /^[a-zA-Z0-9](?:[a-zA-Z0-9\\-]*[a-zA-Z0-9])?$/,\n    URL: Url.URL || URL                                                                 // $lab:coverage:ignore$\n};\n\n\nexports.analyze = function (domain, options = {}) {\n\n    if (!domain) {                                                                      // Catch null / undefined\n        return Errors.code('DOMAIN_NON_EMPTY_STRING');\n    }\n\n    if (typeof domain !== 'string') {\n        throw new Error('Invalid input: domain must be a string');\n    }\n\n    if (domain.length > 256) {\n        return Errors.code('DOMAIN_TOO_LONG');\n    }\n\n    const ascii = !internals.nonAsciiRx.test(domain);\n    if (!ascii) {\n        if (options.allowUnicode === false) {                                           // Defaults to true\n            return Errors.code('DOMAIN_INVALID_UNICODE_CHARS');\n        }\n\n        domain = domain.normalize('NFC');\n    }\n\n    if (internals.domainControlRx.test(domain)) {\n        return Errors.code('DOMAIN_INVALID_CHARS');\n    }\n\n    domain = internals.punycode(domain);\n\n    // https://tools.ietf.org/html/rfc1035 section 2.3.1\n\n    if (options.allowFullyQualified &&\n        domain[domain.length - 1] === '.') {\n\n        domain = domain.slice(0, -1);\n    }\n\n    const minDomainSegments = options.minDomainSegments || internals.minDomainSegments;\n\n    const segments = domain.split('.');\n    if (segments.length < minDomainSegments) {\n        return Errors.code('DOMAIN_SEGMENTS_COUNT');\n    }\n\n    if (options.maxDomainSegments) {\n        if (segments.length > options.maxDomainSegments) {\n            return Errors.code('DOMAIN_SEGMENTS_COUNT_MAX');\n        }\n    }\n\n    const tlds = options.tlds;\n    if (tlds) {\n        const tld = segments[segments.length - 1].toLowerCase();\n        if (tlds.deny && tlds.deny.has(tld) ||\n            tlds.allow && !tlds.allow.has(tld)) {\n\n            return Errors.code('DOMAIN_FORBIDDEN_TLDS');\n        }\n    }\n\n    for (let i = 0; i < segments.length; ++i) {\n        const segment = segments[i];\n\n        if (!segment.length) {\n            return Errors.code('DOMAIN_EMPTY_SEGMENT');\n        }\n\n        if (segment.length > 63) {\n            return Errors.code('DOMAIN_LONG_SEGMENT');\n        }\n\n        if (i < segments.length - 1) {\n            if (!internals.domainSegmentRx.test(segment)) {\n                return Errors.code('DOMAIN_INVALID_CHARS');\n            }\n        }\n        else {\n            if (!internals.tldSegmentRx.test(segment)) {\n                return Errors.code('DOMAIN_INVALID_TLDS_CHARS');\n            }\n        }\n    }\n\n    return null;\n};\n\n\nexports.isValid = function (domain, options) {\n\n    return !exports.analyze(domain, options);\n};\n\n\ninternals.punycode = function (domain) {\n\n    if (domain.includes('%')) {\n        domain = domain.replace(/%/g, '%25');\n    }\n\n    try {\n        return new internals.URL(`http://${domain}`).host;\n    }\n    catch (err) {\n        return domain;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpZGV3YXkvYWRkcmVzcy9saWIvZG9tYWluLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxnQkFBSzs7QUFFekIsZUFBZSxtQkFBTyxDQUFDLHFFQUFVOzs7QUFHakM7QUFDQTtBQUNBO0FBQ0Esd0RBQXdEO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQSxlQUFlLGlDQUFpQzs7QUFFaEQsd0ZBQXdGO0FBQ3hGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esd0ZBQXdGO0FBQ3hGO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsb0JBQW9CLHFCQUFxQjtBQUN6Qzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0EsZUFBZTs7QUFFZjtBQUNBOzs7QUFHQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyQ0FBMkMsT0FBTztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1hdXRoMC8uL25vZGVfbW9kdWxlcy9Ac2lkZXdheS9hZGRyZXNzL2xpYi9kb21haW4uanM/ZjhhMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IFVybCA9IHJlcXVpcmUoJ3VybCcpO1xuXG5jb25zdCBFcnJvcnMgPSByZXF1aXJlKCcuL2Vycm9ycycpO1xuXG5cbmNvbnN0IGludGVybmFscyA9IHtcbiAgICBtaW5Eb21haW5TZWdtZW50czogMixcbiAgICBub25Bc2NpaVJ4OiAvW15cXHgwMC1cXHg3Zl0vLFxuICAgIGRvbWFpbkNvbnRyb2xSeDogL1tcXHgwMC1cXHgyMEBcXDpcXC9cXFxcIyFcXCQmXFwnXFwoXFwpXFwqXFwrLDs9XFw/XS8sICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBDb250cm9sICsgc3BhY2UgKyBzZXBhcmF0b3JzXG4gICAgdGxkU2VnbWVudFJ4OiAvXlthLXpBLVpdKD86W2EtekEtWjAtOVxcLV0qW2EtekEtWjAtOV0pPyQvLFxuICAgIGRvbWFpblNlZ21lbnRSeDogL15bYS16QS1aMC05XSg/OlthLXpBLVowLTlcXC1dKlthLXpBLVowLTldKT8kLyxcbiAgICBVUkw6IFVybC5VUkwgfHwgVVJMICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAkbGFiOmNvdmVyYWdlOmlnbm9yZSRcbn07XG5cblxuZXhwb3J0cy5hbmFseXplID0gZnVuY3Rpb24gKGRvbWFpbiwgb3B0aW9ucyA9IHt9KSB7XG5cbiAgICBpZiAoIWRvbWFpbikgeyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBDYXRjaCBudWxsIC8gdW5kZWZpbmVkXG4gICAgICAgIHJldHVybiBFcnJvcnMuY29kZSgnRE9NQUlOX05PTl9FTVBUWV9TVFJJTkcnKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGRvbWFpbiAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGlucHV0OiBkb21haW4gbXVzdCBiZSBhIHN0cmluZycpO1xuICAgIH1cblxuICAgIGlmIChkb21haW4ubGVuZ3RoID4gMjU2KSB7XG4gICAgICAgIHJldHVybiBFcnJvcnMuY29kZSgnRE9NQUlOX1RPT19MT05HJyk7XG4gICAgfVxuXG4gICAgY29uc3QgYXNjaWkgPSAhaW50ZXJuYWxzLm5vbkFzY2lpUngudGVzdChkb21haW4pO1xuICAgIGlmICghYXNjaWkpIHtcbiAgICAgICAgaWYgKG9wdGlvbnMuYWxsb3dVbmljb2RlID09PSBmYWxzZSkgeyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBEZWZhdWx0cyB0byB0cnVlXG4gICAgICAgICAgICByZXR1cm4gRXJyb3JzLmNvZGUoJ0RPTUFJTl9JTlZBTElEX1VOSUNPREVfQ0hBUlMnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGRvbWFpbiA9IGRvbWFpbi5ub3JtYWxpemUoJ05GQycpO1xuICAgIH1cblxuICAgIGlmIChpbnRlcm5hbHMuZG9tYWluQ29udHJvbFJ4LnRlc3QoZG9tYWluKSkge1xuICAgICAgICByZXR1cm4gRXJyb3JzLmNvZGUoJ0RPTUFJTl9JTlZBTElEX0NIQVJTJyk7XG4gICAgfVxuXG4gICAgZG9tYWluID0gaW50ZXJuYWxzLnB1bnljb2RlKGRvbWFpbik7XG5cbiAgICAvLyBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMTAzNSBzZWN0aW9uIDIuMy4xXG5cbiAgICBpZiAob3B0aW9ucy5hbGxvd0Z1bGx5UXVhbGlmaWVkICYmXG4gICAgICAgIGRvbWFpbltkb21haW4ubGVuZ3RoIC0gMV0gPT09ICcuJykge1xuXG4gICAgICAgIGRvbWFpbiA9IGRvbWFpbi5zbGljZSgwLCAtMSk7XG4gICAgfVxuXG4gICAgY29uc3QgbWluRG9tYWluU2VnbWVudHMgPSBvcHRpb25zLm1pbkRvbWFpblNlZ21lbnRzIHx8IGludGVybmFscy5taW5Eb21haW5TZWdtZW50cztcblxuICAgIGNvbnN0IHNlZ21lbnRzID0gZG9tYWluLnNwbGl0KCcuJyk7XG4gICAgaWYgKHNlZ21lbnRzLmxlbmd0aCA8IG1pbkRvbWFpblNlZ21lbnRzKSB7XG4gICAgICAgIHJldHVybiBFcnJvcnMuY29kZSgnRE9NQUlOX1NFR01FTlRTX0NPVU5UJyk7XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbnMubWF4RG9tYWluU2VnbWVudHMpIHtcbiAgICAgICAgaWYgKHNlZ21lbnRzLmxlbmd0aCA+IG9wdGlvbnMubWF4RG9tYWluU2VnbWVudHMpIHtcbiAgICAgICAgICAgIHJldHVybiBFcnJvcnMuY29kZSgnRE9NQUlOX1NFR01FTlRTX0NPVU5UX01BWCcpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgdGxkcyA9IG9wdGlvbnMudGxkcztcbiAgICBpZiAodGxkcykge1xuICAgICAgICBjb25zdCB0bGQgPSBzZWdtZW50c1tzZWdtZW50cy5sZW5ndGggLSAxXS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBpZiAodGxkcy5kZW55ICYmIHRsZHMuZGVueS5oYXModGxkKSB8fFxuICAgICAgICAgICAgdGxkcy5hbGxvdyAmJiAhdGxkcy5hbGxvdy5oYXModGxkKSkge1xuXG4gICAgICAgICAgICByZXR1cm4gRXJyb3JzLmNvZGUoJ0RPTUFJTl9GT1JCSURERU5fVExEUycpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzZWdtZW50cy5sZW5ndGg7ICsraSkge1xuICAgICAgICBjb25zdCBzZWdtZW50ID0gc2VnbWVudHNbaV07XG5cbiAgICAgICAgaWYgKCFzZWdtZW50Lmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIEVycm9ycy5jb2RlKCdET01BSU5fRU1QVFlfU0VHTUVOVCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHNlZ21lbnQubGVuZ3RoID4gNjMpIHtcbiAgICAgICAgICAgIHJldHVybiBFcnJvcnMuY29kZSgnRE9NQUlOX0xPTkdfU0VHTUVOVCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGkgPCBzZWdtZW50cy5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgICBpZiAoIWludGVybmFscy5kb21haW5TZWdtZW50UngudGVzdChzZWdtZW50KSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBFcnJvcnMuY29kZSgnRE9NQUlOX0lOVkFMSURfQ0hBUlMnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmICghaW50ZXJuYWxzLnRsZFNlZ21lbnRSeC50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEVycm9ycy5jb2RlKCdET01BSU5fSU5WQUxJRF9UTERTX0NIQVJTJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbn07XG5cblxuZXhwb3J0cy5pc1ZhbGlkID0gZnVuY3Rpb24gKGRvbWFpbiwgb3B0aW9ucykge1xuXG4gICAgcmV0dXJuICFleHBvcnRzLmFuYWx5emUoZG9tYWluLCBvcHRpb25zKTtcbn07XG5cblxuaW50ZXJuYWxzLnB1bnljb2RlID0gZnVuY3Rpb24gKGRvbWFpbikge1xuXG4gICAgaWYgKGRvbWFpbi5pbmNsdWRlcygnJScpKSB7XG4gICAgICAgIGRvbWFpbiA9IGRvbWFpbi5yZXBsYWNlKC8lL2csICclMjUnKTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gbmV3IGludGVybmFscy5VUkwoYGh0dHA6Ly8ke2RvbWFpbn1gKS5ob3N0O1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIHJldHVybiBkb21haW47XG4gICAgfVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sideway/address/lib/domain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sideway/address/lib/email.js":
/*!****************************************************!*\
  !*** ./node_modules/@sideway/address/lib/email.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nconst Util = __webpack_require__(/*! util */ \"util\");\n\nconst Domain = __webpack_require__(/*! ./domain */ \"(rsc)/./node_modules/@sideway/address/lib/domain.js\");\nconst Errors = __webpack_require__(/*! ./errors */ \"(rsc)/./node_modules/@sideway/address/lib/errors.js\");\n\n\nconst internals = {\n    nonAsciiRx: /[^\\x00-\\x7f]/,\n    encoder: new (Util.TextEncoder || TextEncoder)()                                            // $lab:coverage:ignore$\n};\n\n\nexports.analyze = function (email, options) {\n\n    return internals.email(email, options);\n};\n\n\nexports.isValid = function (email, options) {\n\n    return !internals.email(email, options);\n};\n\n\ninternals.email = function (email, options = {}) {\n\n    if (typeof email !== 'string') {\n        throw new Error('Invalid input: email must be a string');\n    }\n\n    if (!email) {\n        return Errors.code('EMPTY_STRING');\n    }\n\n    // Unicode\n\n    const ascii = !internals.nonAsciiRx.test(email);\n    if (!ascii) {\n        if (options.allowUnicode === false) {                                                   // Defaults to true\n            return Errors.code('FORBIDDEN_UNICODE');\n        }\n\n        email = email.normalize('NFC');\n    }\n\n    // Basic structure\n\n    const parts = email.split('@');\n    if (parts.length !== 2) {\n        return parts.length > 2 ? Errors.code('MULTIPLE_AT_CHAR') : Errors.code('MISSING_AT_CHAR');\n    }\n\n    const [local, domain] = parts;\n\n    if (!local) {\n        return Errors.code('EMPTY_LOCAL');\n    }\n\n    if (!options.ignoreLength) {\n        if (email.length > 254) {                                           // http://tools.ietf.org/html/rfc5321#section-4.5.3.1.3\n            return Errors.code('ADDRESS_TOO_LONG');\n        }\n\n        if (internals.encoder.encode(local).length > 64) {                  // http://tools.ietf.org/html/rfc5321#section-4.5.3.1.1\n            return Errors.code('LOCAL_TOO_LONG');\n        }\n    }\n\n    // Validate parts\n\n    return internals.local(local, ascii) || Domain.analyze(domain, options);\n};\n\n\ninternals.local = function (local, ascii) {\n\n    const segments = local.split('.');\n    for (const segment of segments) {\n        if (!segment.length) {\n            return Errors.code('EMPTY_LOCAL_SEGMENT');\n        }\n\n        if (ascii) {\n            if (!internals.atextRx.test(segment)) {\n                return Errors.code('INVALID_LOCAL_CHARS');\n            }\n\n            continue;\n        }\n\n        for (const char of segment) {\n            if (internals.atextRx.test(char)) {\n                continue;\n            }\n\n            const binary = internals.binary(char);\n            if (!internals.atomRx.test(binary)) {\n                return Errors.code('INVALID_LOCAL_CHARS');\n            }\n        }\n    }\n};\n\n\ninternals.binary = function (char) {\n\n    return Array.from(internals.encoder.encode(char)).map((v) => String.fromCharCode(v)).join('');\n};\n\n\n/*\n    From RFC 5321:\n\n        Mailbox         =   Local-part \"@\" ( Domain / address-literal )\n\n        Local-part      =   Dot-string / Quoted-string\n        Dot-string      =   Atom *(\".\"  Atom)\n        Atom            =   1*atext\n        atext           =   ALPHA / DIGIT / \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\" / \"+\" / \"-\" / \"/\" / \"=\" / \"?\" / \"^\" / \"_\" / \"`\" / \"{\" / \"|\" / \"}\" / \"~\"\n\n        Domain          =   sub-domain *(\".\" sub-domain)\n        sub-domain      =   Let-dig [Ldh-str]\n        Let-dig         =   ALPHA / DIGIT\n        Ldh-str         =   *( ALPHA / DIGIT / \"-\" ) Let-dig\n\n        ALPHA           =   %x41-5A / %x61-7A        ; a-z, A-Z\n        DIGIT           =   %x30-39                  ; 0-9\n\n    From RFC 6531:\n\n        sub-domain      =/  U-label\n        atext           =/  UTF8-non-ascii\n\n        UTF8-non-ascii  =   UTF8-2 / UTF8-3 / UTF8-4\n\n        UTF8-2          =   %xC2-DF UTF8-tail\n        UTF8-3          =   %xE0 %xA0-BF UTF8-tail /\n                            %xE1-EC 2( UTF8-tail ) /\n                            %xED %x80-9F UTF8-tail /\n                            %xEE-EF 2( UTF8-tail )\n        UTF8-4          =   %xF0 %x90-BF 2( UTF8-tail ) /\n                            %xF1-F3 3( UTF8-tail ) /\n                            %xF4 %x80-8F 2( UTF8-tail )\n\n        UTF8-tail       =   %x80-BF\n\n    Note: The following are not supported:\n\n        RFC 5321: address-literal, Quoted-string\n        RFC 5322: obs-*, CFWS\n*/\n\n\ninternals.atextRx = /^[\\w!#\\$%&'\\*\\+\\-/=\\?\\^`\\{\\|\\}~]+$/;               // _ included in \\w\n\n\ninternals.atomRx = new RegExp([\n\n    //  %xC2-DF UTF8-tail\n    '(?:[\\\\xc2-\\\\xdf][\\\\x80-\\\\xbf])',\n\n    //  %xE0 %xA0-BF UTF8-tail              %xE1-EC 2( UTF8-tail )            %xED %x80-9F UTF8-tail              %xEE-EF 2( UTF8-tail )\n    '(?:\\\\xe0[\\\\xa0-\\\\xbf][\\\\x80-\\\\xbf])|(?:[\\\\xe1-\\\\xec][\\\\x80-\\\\xbf]{2})|(?:\\\\xed[\\\\x80-\\\\x9f][\\\\x80-\\\\xbf])|(?:[\\\\xee-\\\\xef][\\\\x80-\\\\xbf]{2})',\n\n    //  %xF0 %x90-BF 2( UTF8-tail )            %xF1-F3 3( UTF8-tail )            %xF4 %x80-8F 2( UTF8-tail )\n    '(?:\\\\xf0[\\\\x90-\\\\xbf][\\\\x80-\\\\xbf]{2})|(?:[\\\\xf1-\\\\xf3][\\\\x80-\\\\xbf]{3})|(?:\\\\xf4[\\\\x80-\\\\x8f][\\\\x80-\\\\xbf]{2})'\n\n].join('|'));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpZGV3YXkvYWRkcmVzcy9saWIvZW1haWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsYUFBYSxtQkFBTyxDQUFDLGtCQUFNOztBQUUzQixlQUFlLG1CQUFPLENBQUMscUVBQVU7QUFDakMsZUFBZSxtQkFBTyxDQUFDLHFFQUFVOzs7QUFHakM7QUFDQTtBQUNBO0FBQ0E7OztBQUdBLGVBQWU7O0FBRWY7QUFDQTs7O0FBR0EsZUFBZTs7QUFFZjtBQUNBOzs7QUFHQSwrQ0FBK0M7O0FBRS9DO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLGdHQUFnRztBQUNoRztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNEVBQTRFO0FBQzVFO0FBQ0E7O0FBRUEsNEVBQTRFO0FBQzVFO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOzs7QUFHQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esd0lBQXdJLFlBQVk7O0FBRXBKO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVEQUF1RDtBQUN2RCx1REFBdUQ7O0FBRXZEOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBLCtDQUErQyxJQUFJLHFCQUFxQjs7O0FBR3hFOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSx1RUFBdUUsRUFBRSxvRUFBb0UsRUFBRTs7QUFFL0k7QUFDQSx3Q0FBd0MsRUFBRSxnQ0FBZ0MsRUFBRSxxQ0FBcUMsRUFBRTs7QUFFbkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWF1dGgwLy4vbm9kZV9tb2R1bGVzL0BzaWRld2F5L2FkZHJlc3MvbGliL2VtYWlsLmpzPzcyNmQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBVdGlsID0gcmVxdWlyZSgndXRpbCcpO1xuXG5jb25zdCBEb21haW4gPSByZXF1aXJlKCcuL2RvbWFpbicpO1xuY29uc3QgRXJyb3JzID0gcmVxdWlyZSgnLi9lcnJvcnMnKTtcblxuXG5jb25zdCBpbnRlcm5hbHMgPSB7XG4gICAgbm9uQXNjaWlSeDogL1teXFx4MDAtXFx4N2ZdLyxcbiAgICBlbmNvZGVyOiBuZXcgKFV0aWwuVGV4dEVuY29kZXIgfHwgVGV4dEVuY29kZXIpKCkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICRsYWI6Y292ZXJhZ2U6aWdub3JlJFxufTtcblxuXG5leHBvcnRzLmFuYWx5emUgPSBmdW5jdGlvbiAoZW1haWwsIG9wdGlvbnMpIHtcblxuICAgIHJldHVybiBpbnRlcm5hbHMuZW1haWwoZW1haWwsIG9wdGlvbnMpO1xufTtcblxuXG5leHBvcnRzLmlzVmFsaWQgPSBmdW5jdGlvbiAoZW1haWwsIG9wdGlvbnMpIHtcblxuICAgIHJldHVybiAhaW50ZXJuYWxzLmVtYWlsKGVtYWlsLCBvcHRpb25zKTtcbn07XG5cblxuaW50ZXJuYWxzLmVtYWlsID0gZnVuY3Rpb24gKGVtYWlsLCBvcHRpb25zID0ge30pIHtcblxuICAgIGlmICh0eXBlb2YgZW1haWwgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBpbnB1dDogZW1haWwgbXVzdCBiZSBhIHN0cmluZycpO1xuICAgIH1cblxuICAgIGlmICghZW1haWwpIHtcbiAgICAgICAgcmV0dXJuIEVycm9ycy5jb2RlKCdFTVBUWV9TVFJJTkcnKTtcbiAgICB9XG5cbiAgICAvLyBVbmljb2RlXG5cbiAgICBjb25zdCBhc2NpaSA9ICFpbnRlcm5hbHMubm9uQXNjaWlSeC50ZXN0KGVtYWlsKTtcbiAgICBpZiAoIWFzY2lpKSB7XG4gICAgICAgIGlmIChvcHRpb25zLmFsbG93VW5pY29kZSA9PT0gZmFsc2UpIHsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBEZWZhdWx0cyB0byB0cnVlXG4gICAgICAgICAgICByZXR1cm4gRXJyb3JzLmNvZGUoJ0ZPUkJJRERFTl9VTklDT0RFJyk7XG4gICAgICAgIH1cblxuICAgICAgICBlbWFpbCA9IGVtYWlsLm5vcm1hbGl6ZSgnTkZDJyk7XG4gICAgfVxuXG4gICAgLy8gQmFzaWMgc3RydWN0dXJlXG5cbiAgICBjb25zdCBwYXJ0cyA9IGVtYWlsLnNwbGl0KCdAJyk7XG4gICAgaWYgKHBhcnRzLmxlbmd0aCAhPT0gMikge1xuICAgICAgICByZXR1cm4gcGFydHMubGVuZ3RoID4gMiA/IEVycm9ycy5jb2RlKCdNVUxUSVBMRV9BVF9DSEFSJykgOiBFcnJvcnMuY29kZSgnTUlTU0lOR19BVF9DSEFSJyk7XG4gICAgfVxuXG4gICAgY29uc3QgW2xvY2FsLCBkb21haW5dID0gcGFydHM7XG5cbiAgICBpZiAoIWxvY2FsKSB7XG4gICAgICAgIHJldHVybiBFcnJvcnMuY29kZSgnRU1QVFlfTE9DQUwnKTtcbiAgICB9XG5cbiAgICBpZiAoIW9wdGlvbnMuaWdub3JlTGVuZ3RoKSB7XG4gICAgICAgIGlmIChlbWFpbC5sZW5ndGggPiAyNTQpIHsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNTMyMSNzZWN0aW9uLTQuNS4zLjEuM1xuICAgICAgICAgICAgcmV0dXJuIEVycm9ycy5jb2RlKCdBRERSRVNTX1RPT19MT05HJyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaW50ZXJuYWxzLmVuY29kZXIuZW5jb2RlKGxvY2FsKS5sZW5ndGggPiA2NCkgeyAgICAgICAgICAgICAgICAgIC8vIGh0dHA6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjEjc2VjdGlvbi00LjUuMy4xLjFcbiAgICAgICAgICAgIHJldHVybiBFcnJvcnMuY29kZSgnTE9DQUxfVE9PX0xPTkcnKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIFZhbGlkYXRlIHBhcnRzXG5cbiAgICByZXR1cm4gaW50ZXJuYWxzLmxvY2FsKGxvY2FsLCBhc2NpaSkgfHwgRG9tYWluLmFuYWx5emUoZG9tYWluLCBvcHRpb25zKTtcbn07XG5cblxuaW50ZXJuYWxzLmxvY2FsID0gZnVuY3Rpb24gKGxvY2FsLCBhc2NpaSkge1xuXG4gICAgY29uc3Qgc2VnbWVudHMgPSBsb2NhbC5zcGxpdCgnLicpO1xuICAgIGZvciAoY29uc3Qgc2VnbWVudCBvZiBzZWdtZW50cykge1xuICAgICAgICBpZiAoIXNlZ21lbnQubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gRXJyb3JzLmNvZGUoJ0VNUFRZX0xPQ0FMX1NFR01FTlQnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChhc2NpaSkge1xuICAgICAgICAgICAgaWYgKCFpbnRlcm5hbHMuYXRleHRSeC50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEVycm9ycy5jb2RlKCdJTlZBTElEX0xPQ0FMX0NIQVJTJyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgZm9yIChjb25zdCBjaGFyIG9mIHNlZ21lbnQpIHtcbiAgICAgICAgICAgIGlmIChpbnRlcm5hbHMuYXRleHRSeC50ZXN0KGNoYXIpKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IGJpbmFyeSA9IGludGVybmFscy5iaW5hcnkoY2hhcik7XG4gICAgICAgICAgICBpZiAoIWludGVybmFscy5hdG9tUngudGVzdChiaW5hcnkpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEVycm9ycy5jb2RlKCdJTlZBTElEX0xPQ0FMX0NIQVJTJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59O1xuXG5cbmludGVybmFscy5iaW5hcnkgPSBmdW5jdGlvbiAoY2hhcikge1xuXG4gICAgcmV0dXJuIEFycmF5LmZyb20oaW50ZXJuYWxzLmVuY29kZXIuZW5jb2RlKGNoYXIpKS5tYXAoKHYpID0+IFN0cmluZy5mcm9tQ2hhckNvZGUodikpLmpvaW4oJycpO1xufTtcblxuXG4vKlxuICAgIEZyb20gUkZDIDUzMjE6XG5cbiAgICAgICAgTWFpbGJveCAgICAgICAgID0gICBMb2NhbC1wYXJ0IFwiQFwiICggRG9tYWluIC8gYWRkcmVzcy1saXRlcmFsIClcblxuICAgICAgICBMb2NhbC1wYXJ0ICAgICAgPSAgIERvdC1zdHJpbmcgLyBRdW90ZWQtc3RyaW5nXG4gICAgICAgIERvdC1zdHJpbmcgICAgICA9ICAgQXRvbSAqKFwiLlwiICBBdG9tKVxuICAgICAgICBBdG9tICAgICAgICAgICAgPSAgIDEqYXRleHRcbiAgICAgICAgYXRleHQgICAgICAgICAgID0gICBBTFBIQSAvIERJR0lUIC8gXCIhXCIgLyBcIiNcIiAvIFwiJFwiIC8gXCIlXCIgLyBcIiZcIiAvIFwiJ1wiIC8gXCIqXCIgLyBcIitcIiAvIFwiLVwiIC8gXCIvXCIgLyBcIj1cIiAvIFwiP1wiIC8gXCJeXCIgLyBcIl9cIiAvIFwiYFwiIC8gXCJ7XCIgLyBcInxcIiAvIFwifVwiIC8gXCJ+XCJcblxuICAgICAgICBEb21haW4gICAgICAgICAgPSAgIHN1Yi1kb21haW4gKihcIi5cIiBzdWItZG9tYWluKVxuICAgICAgICBzdWItZG9tYWluICAgICAgPSAgIExldC1kaWcgW0xkaC1zdHJdXG4gICAgICAgIExldC1kaWcgICAgICAgICA9ICAgQUxQSEEgLyBESUdJVFxuICAgICAgICBMZGgtc3RyICAgICAgICAgPSAgICooIEFMUEhBIC8gRElHSVQgLyBcIi1cIiApIExldC1kaWdcblxuICAgICAgICBBTFBIQSAgICAgICAgICAgPSAgICV4NDEtNUEgLyAleDYxLTdBICAgICAgICA7IGEteiwgQS1aXG4gICAgICAgIERJR0lUICAgICAgICAgICA9ICAgJXgzMC0zOSAgICAgICAgICAgICAgICAgIDsgMC05XG5cbiAgICBGcm9tIFJGQyA2NTMxOlxuXG4gICAgICAgIHN1Yi1kb21haW4gICAgICA9LyAgVS1sYWJlbFxuICAgICAgICBhdGV4dCAgICAgICAgICAgPS8gIFVURjgtbm9uLWFzY2lpXG5cbiAgICAgICAgVVRGOC1ub24tYXNjaWkgID0gICBVVEY4LTIgLyBVVEY4LTMgLyBVVEY4LTRcblxuICAgICAgICBVVEY4LTIgICAgICAgICAgPSAgICV4QzItREYgVVRGOC10YWlsXG4gICAgICAgIFVURjgtMyAgICAgICAgICA9ICAgJXhFMCAleEEwLUJGIFVURjgtdGFpbCAvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJXhFMS1FQyAyKCBVVEY4LXRhaWwgKSAvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJXhFRCAleDgwLTlGIFVURjgtdGFpbCAvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJXhFRS1FRiAyKCBVVEY4LXRhaWwgKVxuICAgICAgICBVVEY4LTQgICAgICAgICAgPSAgICV4RjAgJXg5MC1CRiAyKCBVVEY4LXRhaWwgKSAvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJXhGMS1GMyAzKCBVVEY4LXRhaWwgKSAvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJXhGNCAleDgwLThGIDIoIFVURjgtdGFpbCApXG5cbiAgICAgICAgVVRGOC10YWlsICAgICAgID0gICAleDgwLUJGXG5cbiAgICBOb3RlOiBUaGUgZm9sbG93aW5nIGFyZSBub3Qgc3VwcG9ydGVkOlxuXG4gICAgICAgIFJGQyA1MzIxOiBhZGRyZXNzLWxpdGVyYWwsIFF1b3RlZC1zdHJpbmdcbiAgICAgICAgUkZDIDUzMjI6IG9icy0qLCBDRldTXG4qL1xuXG5cbmludGVybmFscy5hdGV4dFJ4ID0gL15bXFx3ISNcXCQlJidcXCpcXCtcXC0vPVxcP1xcXmBcXHtcXHxcXH1+XSskLzsgICAgICAgICAgICAgICAvLyBfIGluY2x1ZGVkIGluIFxcd1xuXG5cbmludGVybmFscy5hdG9tUnggPSBuZXcgUmVnRXhwKFtcblxuICAgIC8vICAleEMyLURGIFVURjgtdGFpbFxuICAgICcoPzpbXFxcXHhjMi1cXFxceGRmXVtcXFxceDgwLVxcXFx4YmZdKScsXG5cbiAgICAvLyAgJXhFMCAleEEwLUJGIFVURjgtdGFpbCAgICAgICAgICAgICAgJXhFMS1FQyAyKCBVVEY4LXRhaWwgKSAgICAgICAgICAgICV4RUQgJXg4MC05RiBVVEY4LXRhaWwgICAgICAgICAgICAgICV4RUUtRUYgMiggVVRGOC10YWlsIClcbiAgICAnKD86XFxcXHhlMFtcXFxceGEwLVxcXFx4YmZdW1xcXFx4ODAtXFxcXHhiZl0pfCg/OltcXFxceGUxLVxcXFx4ZWNdW1xcXFx4ODAtXFxcXHhiZl17Mn0pfCg/OlxcXFx4ZWRbXFxcXHg4MC1cXFxceDlmXVtcXFxceDgwLVxcXFx4YmZdKXwoPzpbXFxcXHhlZS1cXFxceGVmXVtcXFxceDgwLVxcXFx4YmZdezJ9KScsXG5cbiAgICAvLyAgJXhGMCAleDkwLUJGIDIoIFVURjgtdGFpbCApICAgICAgICAgICAgJXhGMS1GMyAzKCBVVEY4LXRhaWwgKSAgICAgICAgICAgICV4RjQgJXg4MC04RiAyKCBVVEY4LXRhaWwgKVxuICAgICcoPzpcXFxceGYwW1xcXFx4OTAtXFxcXHhiZl1bXFxcXHg4MC1cXFxceGJmXXsyfSl8KD86W1xcXFx4ZjEtXFxcXHhmM11bXFxcXHg4MC1cXFxceGJmXXszfSl8KD86XFxcXHhmNFtcXFxceDgwLVxcXFx4OGZdW1xcXFx4ODAtXFxcXHhiZl17Mn0pJ1xuXG5dLmpvaW4oJ3wnKSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sideway/address/lib/email.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sideway/address/lib/errors.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sideway/address/lib/errors.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nexports.codes = {\n    EMPTY_STRING: 'Address must be a non-empty string',\n    FORBIDDEN_UNICODE: 'Address contains forbidden Unicode characters',\n    MULTIPLE_AT_CHAR: 'Address cannot contain more than one @ character',\n    MISSING_AT_CHAR: 'Address must contain one @ character',\n    EMPTY_LOCAL: 'Address local part cannot be empty',\n    ADDRESS_TOO_LONG: 'Address too long',\n    LOCAL_TOO_LONG: 'Address local part too long',\n    EMPTY_LOCAL_SEGMENT: 'Address local part contains empty dot-separated segment',\n    INVALID_LOCAL_CHARS: 'Address local part contains invalid character',\n    DOMAIN_NON_EMPTY_STRING: 'Domain must be a non-empty string',\n    DOMAIN_TOO_LONG: 'Domain too long',\n    DOMAIN_INVALID_UNICODE_CHARS: 'Domain contains forbidden Unicode characters',\n    DOMAIN_INVALID_CHARS: 'Domain contains invalid character',\n    DOMAIN_INVALID_TLDS_CHARS: 'Domain contains invalid tld character',\n    DOMAIN_SEGMENTS_COUNT: 'Domain lacks the minimum required number of segments',\n    DOMAIN_SEGMENTS_COUNT_MAX: 'Domain contains too many segments',\n    DOMAIN_FORBIDDEN_TLDS: 'Domain uses forbidden TLD',\n    DOMAIN_EMPTY_SEGMENT: 'Domain contains empty dot-separated segment',\n    DOMAIN_LONG_SEGMENT: 'Domain contains dot-separated segment that is too long'\n};\n\n\nexports.code = function (code) {\n\n    return { code, error: exports.codes[code] };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpZGV3YXkvYWRkcmVzcy9saWIvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQSxZQUFZOztBQUVaLGFBQWE7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtYXV0aDAvLi9ub2RlX21vZHVsZXMvQHNpZGV3YXkvYWRkcmVzcy9saWIvZXJyb3JzLmpzPzM1OWMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLmNvZGVzID0ge1xuICAgIEVNUFRZX1NUUklORzogJ0FkZHJlc3MgbXVzdCBiZSBhIG5vbi1lbXB0eSBzdHJpbmcnLFxuICAgIEZPUkJJRERFTl9VTklDT0RFOiAnQWRkcmVzcyBjb250YWlucyBmb3JiaWRkZW4gVW5pY29kZSBjaGFyYWN0ZXJzJyxcbiAgICBNVUxUSVBMRV9BVF9DSEFSOiAnQWRkcmVzcyBjYW5ub3QgY29udGFpbiBtb3JlIHRoYW4gb25lIEAgY2hhcmFjdGVyJyxcbiAgICBNSVNTSU5HX0FUX0NIQVI6ICdBZGRyZXNzIG11c3QgY29udGFpbiBvbmUgQCBjaGFyYWN0ZXInLFxuICAgIEVNUFRZX0xPQ0FMOiAnQWRkcmVzcyBsb2NhbCBwYXJ0IGNhbm5vdCBiZSBlbXB0eScsXG4gICAgQUREUkVTU19UT09fTE9ORzogJ0FkZHJlc3MgdG9vIGxvbmcnLFxuICAgIExPQ0FMX1RPT19MT05HOiAnQWRkcmVzcyBsb2NhbCBwYXJ0IHRvbyBsb25nJyxcbiAgICBFTVBUWV9MT0NBTF9TRUdNRU5UOiAnQWRkcmVzcyBsb2NhbCBwYXJ0IGNvbnRhaW5zIGVtcHR5IGRvdC1zZXBhcmF0ZWQgc2VnbWVudCcsXG4gICAgSU5WQUxJRF9MT0NBTF9DSEFSUzogJ0FkZHJlc3MgbG9jYWwgcGFydCBjb250YWlucyBpbnZhbGlkIGNoYXJhY3RlcicsXG4gICAgRE9NQUlOX05PTl9FTVBUWV9TVFJJTkc6ICdEb21haW4gbXVzdCBiZSBhIG5vbi1lbXB0eSBzdHJpbmcnLFxuICAgIERPTUFJTl9UT09fTE9ORzogJ0RvbWFpbiB0b28gbG9uZycsXG4gICAgRE9NQUlOX0lOVkFMSURfVU5JQ09ERV9DSEFSUzogJ0RvbWFpbiBjb250YWlucyBmb3JiaWRkZW4gVW5pY29kZSBjaGFyYWN0ZXJzJyxcbiAgICBET01BSU5fSU5WQUxJRF9DSEFSUzogJ0RvbWFpbiBjb250YWlucyBpbnZhbGlkIGNoYXJhY3RlcicsXG4gICAgRE9NQUlOX0lOVkFMSURfVExEU19DSEFSUzogJ0RvbWFpbiBjb250YWlucyBpbnZhbGlkIHRsZCBjaGFyYWN0ZXInLFxuICAgIERPTUFJTl9TRUdNRU5UU19DT1VOVDogJ0RvbWFpbiBsYWNrcyB0aGUgbWluaW11bSByZXF1aXJlZCBudW1iZXIgb2Ygc2VnbWVudHMnLFxuICAgIERPTUFJTl9TRUdNRU5UU19DT1VOVF9NQVg6ICdEb21haW4gY29udGFpbnMgdG9vIG1hbnkgc2VnbWVudHMnLFxuICAgIERPTUFJTl9GT1JCSURERU5fVExEUzogJ0RvbWFpbiB1c2VzIGZvcmJpZGRlbiBUTEQnLFxuICAgIERPTUFJTl9FTVBUWV9TRUdNRU5UOiAnRG9tYWluIGNvbnRhaW5zIGVtcHR5IGRvdC1zZXBhcmF0ZWQgc2VnbWVudCcsXG4gICAgRE9NQUlOX0xPTkdfU0VHTUVOVDogJ0RvbWFpbiBjb250YWlucyBkb3Qtc2VwYXJhdGVkIHNlZ21lbnQgdGhhdCBpcyB0b28gbG9uZydcbn07XG5cblxuZXhwb3J0cy5jb2RlID0gZnVuY3Rpb24gKGNvZGUpIHtcblxuICAgIHJldHVybiB7IGNvZGUsIGVycm9yOiBleHBvcnRzLmNvZGVzW2NvZGVdIH07XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sideway/address/lib/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sideway/address/lib/ip.js":
/*!*************************************************!*\
  !*** ./node_modules/@sideway/address/lib/ip.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nconst Assert = __webpack_require__(/*! @hapi/hoek/lib/assert */ \"(rsc)/./node_modules/@hapi/hoek/lib/assert.js\");\n\nconst Uri = __webpack_require__(/*! ./uri */ \"(rsc)/./node_modules/@sideway/address/lib/uri.js\");\n\n\nconst internals = {};\n\n\nexports.regex = function (options = {}) {\n\n    // CIDR\n\n    Assert(options.cidr === undefined || typeof options.cidr === 'string', 'options.cidr must be a string');\n    const cidr = options.cidr ? options.cidr.toLowerCase() : 'optional';\n    Assert(['required', 'optional', 'forbidden'].includes(cidr), 'options.cidr must be one of required, optional, forbidden');\n\n    // Versions\n\n    Assert(options.version === undefined || typeof options.version === 'string' || Array.isArray(options.version), 'options.version must be a string or an array of string');\n    let versions = options.version || ['ipv4', 'ipv6', 'ipvfuture'];\n    if (!Array.isArray(versions)) {\n        versions = [versions];\n    }\n\n    Assert(versions.length >= 1, 'options.version must have at least 1 version specified');\n\n    for (let i = 0; i < versions.length; ++i) {\n        Assert(typeof versions[i] === 'string', 'options.version must only contain strings');\n        versions[i] = versions[i].toLowerCase();\n        Assert(['ipv4', 'ipv6', 'ipvfuture'].includes(versions[i]), 'options.version contains unknown version ' + versions[i] + ' - must be one of ipv4, ipv6, ipvfuture');\n    }\n\n    versions = Array.from(new Set(versions));\n\n    // Regex\n\n    const parts = versions.map((version) => {\n\n        // Forbidden\n\n        if (cidr === 'forbidden') {\n            return Uri.ip[version];\n        }\n\n        // Required\n\n        const cidrpart = `\\\\/${version === 'ipv4' ? Uri.ip.v4Cidr : Uri.ip.v6Cidr}`;\n\n        if (cidr === 'required') {\n            return `${Uri.ip[version]}${cidrpart}`;\n        }\n\n        // Optional\n\n        return `${Uri.ip[version]}(?:${cidrpart})?`;\n    });\n\n    const raw = `(?:${parts.join('|')})`;\n    const regex = new RegExp(`^${raw}$`);\n    return { cidr, versions, regex, raw };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpZGV3YXkvYWRkcmVzcy9saWIvaXAuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsZUFBZSxtQkFBTyxDQUFDLDRFQUF1Qjs7QUFFOUMsWUFBWSxtQkFBTyxDQUFDLCtEQUFPOzs7QUFHM0I7OztBQUdBLGFBQWEseUJBQXlCOztBQUV0Qzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxvQkFBb0IscUJBQXFCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSwrQkFBK0IsbURBQW1EOztBQUVsRjtBQUNBLHNCQUFzQixnQkFBZ0IsRUFBRSxTQUFTO0FBQ2pEOztBQUVBOztBQUVBLGtCQUFrQixnQkFBZ0IsS0FBSyxTQUFTO0FBQ2hELEtBQUs7O0FBRUwsc0JBQXNCLGdCQUFnQjtBQUN0QyxpQ0FBaUMsSUFBSTtBQUNyQyxhQUFhO0FBQ2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWF1dGgwLy4vbm9kZV9tb2R1bGVzL0BzaWRld2F5L2FkZHJlc3MvbGliL2lwLmpzP2RmZjUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBBc3NlcnQgPSByZXF1aXJlKCdAaGFwaS9ob2VrL2xpYi9hc3NlcnQnKTtcblxuY29uc3QgVXJpID0gcmVxdWlyZSgnLi91cmknKTtcblxuXG5jb25zdCBpbnRlcm5hbHMgPSB7fTtcblxuXG5leHBvcnRzLnJlZ2V4ID0gZnVuY3Rpb24gKG9wdGlvbnMgPSB7fSkge1xuXG4gICAgLy8gQ0lEUlxuXG4gICAgQXNzZXJ0KG9wdGlvbnMuY2lkciA9PT0gdW5kZWZpbmVkIHx8IHR5cGVvZiBvcHRpb25zLmNpZHIgPT09ICdzdHJpbmcnLCAnb3B0aW9ucy5jaWRyIG11c3QgYmUgYSBzdHJpbmcnKTtcbiAgICBjb25zdCBjaWRyID0gb3B0aW9ucy5jaWRyID8gb3B0aW9ucy5jaWRyLnRvTG93ZXJDYXNlKCkgOiAnb3B0aW9uYWwnO1xuICAgIEFzc2VydChbJ3JlcXVpcmVkJywgJ29wdGlvbmFsJywgJ2ZvcmJpZGRlbiddLmluY2x1ZGVzKGNpZHIpLCAnb3B0aW9ucy5jaWRyIG11c3QgYmUgb25lIG9mIHJlcXVpcmVkLCBvcHRpb25hbCwgZm9yYmlkZGVuJyk7XG5cbiAgICAvLyBWZXJzaW9uc1xuXG4gICAgQXNzZXJ0KG9wdGlvbnMudmVyc2lvbiA9PT0gdW5kZWZpbmVkIHx8IHR5cGVvZiBvcHRpb25zLnZlcnNpb24gPT09ICdzdHJpbmcnIHx8IEFycmF5LmlzQXJyYXkob3B0aW9ucy52ZXJzaW9uKSwgJ29wdGlvbnMudmVyc2lvbiBtdXN0IGJlIGEgc3RyaW5nIG9yIGFuIGFycmF5IG9mIHN0cmluZycpO1xuICAgIGxldCB2ZXJzaW9ucyA9IG9wdGlvbnMudmVyc2lvbiB8fCBbJ2lwdjQnLCAnaXB2NicsICdpcHZmdXR1cmUnXTtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodmVyc2lvbnMpKSB7XG4gICAgICAgIHZlcnNpb25zID0gW3ZlcnNpb25zXTtcbiAgICB9XG5cbiAgICBBc3NlcnQodmVyc2lvbnMubGVuZ3RoID49IDEsICdvcHRpb25zLnZlcnNpb24gbXVzdCBoYXZlIGF0IGxlYXN0IDEgdmVyc2lvbiBzcGVjaWZpZWQnKTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdmVyc2lvbnMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgQXNzZXJ0KHR5cGVvZiB2ZXJzaW9uc1tpXSA9PT0gJ3N0cmluZycsICdvcHRpb25zLnZlcnNpb24gbXVzdCBvbmx5IGNvbnRhaW4gc3RyaW5ncycpO1xuICAgICAgICB2ZXJzaW9uc1tpXSA9IHZlcnNpb25zW2ldLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIEFzc2VydChbJ2lwdjQnLCAnaXB2NicsICdpcHZmdXR1cmUnXS5pbmNsdWRlcyh2ZXJzaW9uc1tpXSksICdvcHRpb25zLnZlcnNpb24gY29udGFpbnMgdW5rbm93biB2ZXJzaW9uICcgKyB2ZXJzaW9uc1tpXSArICcgLSBtdXN0IGJlIG9uZSBvZiBpcHY0LCBpcHY2LCBpcHZmdXR1cmUnKTtcbiAgICB9XG5cbiAgICB2ZXJzaW9ucyA9IEFycmF5LmZyb20obmV3IFNldCh2ZXJzaW9ucykpO1xuXG4gICAgLy8gUmVnZXhcblxuICAgIGNvbnN0IHBhcnRzID0gdmVyc2lvbnMubWFwKCh2ZXJzaW9uKSA9PiB7XG5cbiAgICAgICAgLy8gRm9yYmlkZGVuXG5cbiAgICAgICAgaWYgKGNpZHIgPT09ICdmb3JiaWRkZW4nKSB7XG4gICAgICAgICAgICByZXR1cm4gVXJpLmlwW3ZlcnNpb25dO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gUmVxdWlyZWRcblxuICAgICAgICBjb25zdCBjaWRycGFydCA9IGBcXFxcLyR7dmVyc2lvbiA9PT0gJ2lwdjQnID8gVXJpLmlwLnY0Q2lkciA6IFVyaS5pcC52NkNpZHJ9YDtcblxuICAgICAgICBpZiAoY2lkciA9PT0gJ3JlcXVpcmVkJykge1xuICAgICAgICAgICAgcmV0dXJuIGAke1VyaS5pcFt2ZXJzaW9uXX0ke2NpZHJwYXJ0fWA7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBPcHRpb25hbFxuXG4gICAgICAgIHJldHVybiBgJHtVcmkuaXBbdmVyc2lvbl19KD86JHtjaWRycGFydH0pP2A7XG4gICAgfSk7XG5cbiAgICBjb25zdCByYXcgPSBgKD86JHtwYXJ0cy5qb2luKCd8Jyl9KWA7XG4gICAgY29uc3QgcmVnZXggPSBuZXcgUmVnRXhwKGBeJHtyYXd9JGApO1xuICAgIHJldHVybiB7IGNpZHIsIHZlcnNpb25zLCByZWdleCwgcmF3IH07XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sideway/address/lib/ip.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sideway/address/lib/tlds.js":
/*!***************************************************!*\
  !*** ./node_modules/@sideway/address/lib/tlds.js ***!
  \***************************************************/
/***/ ((module) => {

eval("\n\nconst internals = {};\n\n\n// http://data.iana.org/TLD/tlds-alpha-by-domain.txt\n// # Version 2024012900, Last Updated Mon Jan 29 07:07:01 2024 UTC\n\n\ninternals.tlds = [\n    'AAA',\n    'AARP',\n    'ABB',\n    'ABBOTT',\n    'ABBVIE',\n    'ABC',\n    'ABLE',\n    'ABOGADO',\n    'ABUDHABI',\n    'AC',\n    'ACADEMY',\n    'ACCENTURE',\n    'ACCOUNTANT',\n    'ACCOUNTANTS',\n    'ACO',\n    'ACTOR',\n    'AD',\n    'ADS',\n    'ADULT',\n    'AE',\n    'AEG',\n    'AERO',\n    'AETNA',\n    'AF',\n    'AFL',\n    'AFRICA',\n    'AG',\n    'AGAKHAN',\n    'AGENCY',\n    'AI',\n    'AIG',\n    'AIRBUS',\n    'AIRFORCE',\n    'AIRTEL',\n    'AKDN',\n    'AL',\n    'ALIBABA',\n    'ALIPAY',\n    'ALLFINANZ',\n    'ALLSTATE',\n    'ALLY',\n    'ALSACE',\n    'ALSTOM',\n    'AM',\n    'AMAZON',\n    'AMERICANEXPRESS',\n    'AMERICANFAMILY',\n    'AMEX',\n    'AMFAM',\n    'AMICA',\n    'AMSTERDAM',\n    'ANALYTICS',\n    'ANDROID',\n    'ANQUAN',\n    'ANZ',\n    'AO',\n    'AOL',\n    'APARTMENTS',\n    'APP',\n    'APPLE',\n    'AQ',\n    'AQUARELLE',\n    'AR',\n    'ARAB',\n    'ARAMCO',\n    'ARCHI',\n    'ARMY',\n    'ARPA',\n    'ART',\n    'ARTE',\n    'AS',\n    'ASDA',\n    'ASIA',\n    'ASSOCIATES',\n    'AT',\n    'ATHLETA',\n    'ATTORNEY',\n    'AU',\n    'AUCTION',\n    'AUDI',\n    'AUDIBLE',\n    'AUDIO',\n    'AUSPOST',\n    'AUTHOR',\n    'AUTO',\n    'AUTOS',\n    'AVIANCA',\n    'AW',\n    'AWS',\n    'AX',\n    'AXA',\n    'AZ',\n    'AZURE',\n    'BA',\n    'BABY',\n    'BAIDU',\n    'BANAMEX',\n    'BAND',\n    'BANK',\n    'BAR',\n    'BARCELONA',\n    'BARCLAYCARD',\n    'BARCLAYS',\n    'BAREFOOT',\n    'BARGAINS',\n    'BASEBALL',\n    'BASKETBALL',\n    'BAUHAUS',\n    'BAYERN',\n    'BB',\n    'BBC',\n    'BBT',\n    'BBVA',\n    'BCG',\n    'BCN',\n    'BD',\n    'BE',\n    'BEATS',\n    'BEAUTY',\n    'BEER',\n    'BENTLEY',\n    'BERLIN',\n    'BEST',\n    'BESTBUY',\n    'BET',\n    'BF',\n    'BG',\n    'BH',\n    'BHARTI',\n    'BI',\n    'BIBLE',\n    'BID',\n    'BIKE',\n    'BING',\n    'BINGO',\n    'BIO',\n    'BIZ',\n    'BJ',\n    'BLACK',\n    'BLACKFRIDAY',\n    'BLOCKBUSTER',\n    'BLOG',\n    'BLOOMBERG',\n    'BLUE',\n    'BM',\n    'BMS',\n    'BMW',\n    'BN',\n    'BNPPARIBAS',\n    'BO',\n    'BOATS',\n    'BOEHRINGER',\n    'BOFA',\n    'BOM',\n    'BOND',\n    'BOO',\n    'BOOK',\n    'BOOKING',\n    'BOSCH',\n    'BOSTIK',\n    'BOSTON',\n    'BOT',\n    'BOUTIQUE',\n    'BOX',\n    'BR',\n    'BRADESCO',\n    'BRIDGESTONE',\n    'BROADWAY',\n    'BROKER',\n    'BROTHER',\n    'BRUSSELS',\n    'BS',\n    'BT',\n    'BUILD',\n    'BUILDERS',\n    'BUSINESS',\n    'BUY',\n    'BUZZ',\n    'BV',\n    'BW',\n    'BY',\n    'BZ',\n    'BZH',\n    'CA',\n    'CAB',\n    'CAFE',\n    'CAL',\n    'CALL',\n    'CALVINKLEIN',\n    'CAM',\n    'CAMERA',\n    'CAMP',\n    'CANON',\n    'CAPETOWN',\n    'CAPITAL',\n    'CAPITALONE',\n    'CAR',\n    'CARAVAN',\n    'CARDS',\n    'CARE',\n    'CAREER',\n    'CAREERS',\n    'CARS',\n    'CASA',\n    'CASE',\n    'CASH',\n    'CASINO',\n    'CAT',\n    'CATERING',\n    'CATHOLIC',\n    'CBA',\n    'CBN',\n    'CBRE',\n    'CC',\n    'CD',\n    'CENTER',\n    'CEO',\n    'CERN',\n    'CF',\n    'CFA',\n    'CFD',\n    'CG',\n    'CH',\n    'CHANEL',\n    'CHANNEL',\n    'CHARITY',\n    'CHASE',\n    'CHAT',\n    'CHEAP',\n    'CHINTAI',\n    'CHRISTMAS',\n    'CHROME',\n    'CHURCH',\n    'CI',\n    'CIPRIANI',\n    'CIRCLE',\n    'CISCO',\n    'CITADEL',\n    'CITI',\n    'CITIC',\n    'CITY',\n    'CK',\n    'CL',\n    'CLAIMS',\n    'CLEANING',\n    'CLICK',\n    'CLINIC',\n    'CLINIQUE',\n    'CLOTHING',\n    'CLOUD',\n    'CLUB',\n    'CLUBMED',\n    'CM',\n    'CN',\n    'CO',\n    'COACH',\n    'CODES',\n    'COFFEE',\n    'COLLEGE',\n    'COLOGNE',\n    'COM',\n    'COMCAST',\n    'COMMBANK',\n    'COMMUNITY',\n    'COMPANY',\n    'COMPARE',\n    'COMPUTER',\n    'COMSEC',\n    'CONDOS',\n    'CONSTRUCTION',\n    'CONSULTING',\n    'CONTACT',\n    'CONTRACTORS',\n    'COOKING',\n    'COOL',\n    'COOP',\n    'CORSICA',\n    'COUNTRY',\n    'COUPON',\n    'COUPONS',\n    'COURSES',\n    'CPA',\n    'CR',\n    'CREDIT',\n    'CREDITCARD',\n    'CREDITUNION',\n    'CRICKET',\n    'CROWN',\n    'CRS',\n    'CRUISE',\n    'CRUISES',\n    'CU',\n    'CUISINELLA',\n    'CV',\n    'CW',\n    'CX',\n    'CY',\n    'CYMRU',\n    'CYOU',\n    'CZ',\n    'DABUR',\n    'DAD',\n    'DANCE',\n    'DATA',\n    'DATE',\n    'DATING',\n    'DATSUN',\n    'DAY',\n    'DCLK',\n    'DDS',\n    'DE',\n    'DEAL',\n    'DEALER',\n    'DEALS',\n    'DEGREE',\n    'DELIVERY',\n    'DELL',\n    'DELOITTE',\n    'DELTA',\n    'DEMOCRAT',\n    'DENTAL',\n    'DENTIST',\n    'DESI',\n    'DESIGN',\n    'DEV',\n    'DHL',\n    'DIAMONDS',\n    'DIET',\n    'DIGITAL',\n    'DIRECT',\n    'DIRECTORY',\n    'DISCOUNT',\n    'DISCOVER',\n    'DISH',\n    'DIY',\n    'DJ',\n    'DK',\n    'DM',\n    'DNP',\n    'DO',\n    'DOCS',\n    'DOCTOR',\n    'DOG',\n    'DOMAINS',\n    'DOT',\n    'DOWNLOAD',\n    'DRIVE',\n    'DTV',\n    'DUBAI',\n    'DUNLOP',\n    'DUPONT',\n    'DURBAN',\n    'DVAG',\n    'DVR',\n    'DZ',\n    'EARTH',\n    'EAT',\n    'EC',\n    'ECO',\n    'EDEKA',\n    'EDU',\n    'EDUCATION',\n    'EE',\n    'EG',\n    'EMAIL',\n    'EMERCK',\n    'ENERGY',\n    'ENGINEER',\n    'ENGINEERING',\n    'ENTERPRISES',\n    'EPSON',\n    'EQUIPMENT',\n    'ER',\n    'ERICSSON',\n    'ERNI',\n    'ES',\n    'ESQ',\n    'ESTATE',\n    'ET',\n    'EU',\n    'EUROVISION',\n    'EUS',\n    'EVENTS',\n    'EXCHANGE',\n    'EXPERT',\n    'EXPOSED',\n    'EXPRESS',\n    'EXTRASPACE',\n    'FAGE',\n    'FAIL',\n    'FAIRWINDS',\n    'FAITH',\n    'FAMILY',\n    'FAN',\n    'FANS',\n    'FARM',\n    'FARMERS',\n    'FASHION',\n    'FAST',\n    'FEDEX',\n    'FEEDBACK',\n    'FERRARI',\n    'FERRERO',\n    'FI',\n    'FIDELITY',\n    'FIDO',\n    'FILM',\n    'FINAL',\n    'FINANCE',\n    'FINANCIAL',\n    'FIRE',\n    'FIRESTONE',\n    'FIRMDALE',\n    'FISH',\n    'FISHING',\n    'FIT',\n    'FITNESS',\n    'FJ',\n    'FK',\n    'FLICKR',\n    'FLIGHTS',\n    'FLIR',\n    'FLORIST',\n    'FLOWERS',\n    'FLY',\n    'FM',\n    'FO',\n    'FOO',\n    'FOOD',\n    'FOOTBALL',\n    'FORD',\n    'FOREX',\n    'FORSALE',\n    'FORUM',\n    'FOUNDATION',\n    'FOX',\n    'FR',\n    'FREE',\n    'FRESENIUS',\n    'FRL',\n    'FROGANS',\n    'FRONTIER',\n    'FTR',\n    'FUJITSU',\n    'FUN',\n    'FUND',\n    'FURNITURE',\n    'FUTBOL',\n    'FYI',\n    'GA',\n    'GAL',\n    'GALLERY',\n    'GALLO',\n    'GALLUP',\n    'GAME',\n    'GAMES',\n    'GAP',\n    'GARDEN',\n    'GAY',\n    'GB',\n    'GBIZ',\n    'GD',\n    'GDN',\n    'GE',\n    'GEA',\n    'GENT',\n    'GENTING',\n    'GEORGE',\n    'GF',\n    'GG',\n    'GGEE',\n    'GH',\n    'GI',\n    'GIFT',\n    'GIFTS',\n    'GIVES',\n    'GIVING',\n    'GL',\n    'GLASS',\n    'GLE',\n    'GLOBAL',\n    'GLOBO',\n    'GM',\n    'GMAIL',\n    'GMBH',\n    'GMO',\n    'GMX',\n    'GN',\n    'GODADDY',\n    'GOLD',\n    'GOLDPOINT',\n    'GOLF',\n    'GOO',\n    'GOODYEAR',\n    'GOOG',\n    'GOOGLE',\n    'GOP',\n    'GOT',\n    'GOV',\n    'GP',\n    'GQ',\n    'GR',\n    'GRAINGER',\n    'GRAPHICS',\n    'GRATIS',\n    'GREEN',\n    'GRIPE',\n    'GROCERY',\n    'GROUP',\n    'GS',\n    'GT',\n    'GU',\n    'GUARDIAN',\n    'GUCCI',\n    'GUGE',\n    'GUIDE',\n    'GUITARS',\n    'GURU',\n    'GW',\n    'GY',\n    'HAIR',\n    'HAMBURG',\n    'HANGOUT',\n    'HAUS',\n    'HBO',\n    'HDFC',\n    'HDFCBANK',\n    'HEALTH',\n    'HEALTHCARE',\n    'HELP',\n    'HELSINKI',\n    'HERE',\n    'HERMES',\n    'HIPHOP',\n    'HISAMITSU',\n    'HITACHI',\n    'HIV',\n    'HK',\n    'HKT',\n    'HM',\n    'HN',\n    'HOCKEY',\n    'HOLDINGS',\n    'HOLIDAY',\n    'HOMEDEPOT',\n    'HOMEGOODS',\n    'HOMES',\n    'HOMESENSE',\n    'HONDA',\n    'HORSE',\n    'HOSPITAL',\n    'HOST',\n    'HOSTING',\n    'HOT',\n    'HOTELS',\n    'HOTMAIL',\n    'HOUSE',\n    'HOW',\n    'HR',\n    'HSBC',\n    'HT',\n    'HU',\n    'HUGHES',\n    'HYATT',\n    'HYUNDAI',\n    'IBM',\n    'ICBC',\n    'ICE',\n    'ICU',\n    'ID',\n    'IE',\n    'IEEE',\n    'IFM',\n    'IKANO',\n    'IL',\n    'IM',\n    'IMAMAT',\n    'IMDB',\n    'IMMO',\n    'IMMOBILIEN',\n    'IN',\n    'INC',\n    'INDUSTRIES',\n    'INFINITI',\n    'INFO',\n    'ING',\n    'INK',\n    'INSTITUTE',\n    'INSURANCE',\n    'INSURE',\n    'INT',\n    'INTERNATIONAL',\n    'INTUIT',\n    'INVESTMENTS',\n    'IO',\n    'IPIRANGA',\n    'IQ',\n    'IR',\n    'IRISH',\n    'IS',\n    'ISMAILI',\n    'IST',\n    'ISTANBUL',\n    'IT',\n    'ITAU',\n    'ITV',\n    'JAGUAR',\n    'JAVA',\n    'JCB',\n    'JE',\n    'JEEP',\n    'JETZT',\n    'JEWELRY',\n    'JIO',\n    'JLL',\n    'JM',\n    'JMP',\n    'JNJ',\n    'JO',\n    'JOBS',\n    'JOBURG',\n    'JOT',\n    'JOY',\n    'JP',\n    'JPMORGAN',\n    'JPRS',\n    'JUEGOS',\n    'JUNIPER',\n    'KAUFEN',\n    'KDDI',\n    'KE',\n    'KERRYHOTELS',\n    'KERRYLOGISTICS',\n    'KERRYPROPERTIES',\n    'KFH',\n    'KG',\n    'KH',\n    'KI',\n    'KIA',\n    'KIDS',\n    'KIM',\n    'KINDLE',\n    'KITCHEN',\n    'KIWI',\n    'KM',\n    'KN',\n    'KOELN',\n    'KOMATSU',\n    'KOSHER',\n    'KP',\n    'KPMG',\n    'KPN',\n    'KR',\n    'KRD',\n    'KRED',\n    'KUOKGROUP',\n    'KW',\n    'KY',\n    'KYOTO',\n    'KZ',\n    'LA',\n    'LACAIXA',\n    'LAMBORGHINI',\n    'LAMER',\n    'LANCASTER',\n    'LAND',\n    'LANDROVER',\n    'LANXESS',\n    'LASALLE',\n    'LAT',\n    'LATINO',\n    'LATROBE',\n    'LAW',\n    'LAWYER',\n    'LB',\n    'LC',\n    'LDS',\n    'LEASE',\n    'LECLERC',\n    'LEFRAK',\n    'LEGAL',\n    'LEGO',\n    'LEXUS',\n    'LGBT',\n    'LI',\n    'LIDL',\n    'LIFE',\n    'LIFEINSURANCE',\n    'LIFESTYLE',\n    'LIGHTING',\n    'LIKE',\n    'LILLY',\n    'LIMITED',\n    'LIMO',\n    'LINCOLN',\n    'LINK',\n    'LIPSY',\n    'LIVE',\n    'LIVING',\n    'LK',\n    'LLC',\n    'LLP',\n    'LOAN',\n    'LOANS',\n    'LOCKER',\n    'LOCUS',\n    'LOL',\n    'LONDON',\n    'LOTTE',\n    'LOTTO',\n    'LOVE',\n    'LPL',\n    'LPLFINANCIAL',\n    'LR',\n    'LS',\n    'LT',\n    'LTD',\n    'LTDA',\n    'LU',\n    'LUNDBECK',\n    'LUXE',\n    'LUXURY',\n    'LV',\n    'LY',\n    'MA',\n    'MADRID',\n    'MAIF',\n    'MAISON',\n    'MAKEUP',\n    'MAN',\n    'MANAGEMENT',\n    'MANGO',\n    'MAP',\n    'MARKET',\n    'MARKETING',\n    'MARKETS',\n    'MARRIOTT',\n    'MARSHALLS',\n    'MATTEL',\n    'MBA',\n    'MC',\n    'MCKINSEY',\n    'MD',\n    'ME',\n    'MED',\n    'MEDIA',\n    'MEET',\n    'MELBOURNE',\n    'MEME',\n    'MEMORIAL',\n    'MEN',\n    'MENU',\n    'MERCKMSD',\n    'MG',\n    'MH',\n    'MIAMI',\n    'MICROSOFT',\n    'MIL',\n    'MINI',\n    'MINT',\n    'MIT',\n    'MITSUBISHI',\n    'MK',\n    'ML',\n    'MLB',\n    'MLS',\n    'MM',\n    'MMA',\n    'MN',\n    'MO',\n    'MOBI',\n    'MOBILE',\n    'MODA',\n    'MOE',\n    'MOI',\n    'MOM',\n    'MONASH',\n    'MONEY',\n    'MONSTER',\n    'MORMON',\n    'MORTGAGE',\n    'MOSCOW',\n    'MOTO',\n    'MOTORCYCLES',\n    'MOV',\n    'MOVIE',\n    'MP',\n    'MQ',\n    'MR',\n    'MS',\n    'MSD',\n    'MT',\n    'MTN',\n    'MTR',\n    'MU',\n    'MUSEUM',\n    'MUSIC',\n    'MV',\n    'MW',\n    'MX',\n    'MY',\n    'MZ',\n    'NA',\n    'NAB',\n    'NAGOYA',\n    'NAME',\n    'NATURA',\n    'NAVY',\n    'NBA',\n    'NC',\n    'NE',\n    'NEC',\n    'NET',\n    'NETBANK',\n    'NETFLIX',\n    'NETWORK',\n    'NEUSTAR',\n    'NEW',\n    'NEWS',\n    'NEXT',\n    'NEXTDIRECT',\n    'NEXUS',\n    'NF',\n    'NFL',\n    'NG',\n    'NGO',\n    'NHK',\n    'NI',\n    'NICO',\n    'NIKE',\n    'NIKON',\n    'NINJA',\n    'NISSAN',\n    'NISSAY',\n    'NL',\n    'NO',\n    'NOKIA',\n    'NORTON',\n    'NOW',\n    'NOWRUZ',\n    'NOWTV',\n    'NP',\n    'NR',\n    'NRA',\n    'NRW',\n    'NTT',\n    'NU',\n    'NYC',\n    'NZ',\n    'OBI',\n    'OBSERVER',\n    'OFFICE',\n    'OKINAWA',\n    'OLAYAN',\n    'OLAYANGROUP',\n    'OLLO',\n    'OM',\n    'OMEGA',\n    'ONE',\n    'ONG',\n    'ONL',\n    'ONLINE',\n    'OOO',\n    'OPEN',\n    'ORACLE',\n    'ORANGE',\n    'ORG',\n    'ORGANIC',\n    'ORIGINS',\n    'OSAKA',\n    'OTSUKA',\n    'OTT',\n    'OVH',\n    'PA',\n    'PAGE',\n    'PANASONIC',\n    'PARIS',\n    'PARS',\n    'PARTNERS',\n    'PARTS',\n    'PARTY',\n    'PAY',\n    'PCCW',\n    'PE',\n    'PET',\n    'PF',\n    'PFIZER',\n    'PG',\n    'PH',\n    'PHARMACY',\n    'PHD',\n    'PHILIPS',\n    'PHONE',\n    'PHOTO',\n    'PHOTOGRAPHY',\n    'PHOTOS',\n    'PHYSIO',\n    'PICS',\n    'PICTET',\n    'PICTURES',\n    'PID',\n    'PIN',\n    'PING',\n    'PINK',\n    'PIONEER',\n    'PIZZA',\n    'PK',\n    'PL',\n    'PLACE',\n    'PLAY',\n    'PLAYSTATION',\n    'PLUMBING',\n    'PLUS',\n    'PM',\n    'PN',\n    'PNC',\n    'POHL',\n    'POKER',\n    'POLITIE',\n    'PORN',\n    'POST',\n    'PR',\n    'PRAMERICA',\n    'PRAXI',\n    'PRESS',\n    'PRIME',\n    'PRO',\n    'PROD',\n    'PRODUCTIONS',\n    'PROF',\n    'PROGRESSIVE',\n    'PROMO',\n    'PROPERTIES',\n    'PROPERTY',\n    'PROTECTION',\n    'PRU',\n    'PRUDENTIAL',\n    'PS',\n    'PT',\n    'PUB',\n    'PW',\n    'PWC',\n    'PY',\n    'QA',\n    'QPON',\n    'QUEBEC',\n    'QUEST',\n    'RACING',\n    'RADIO',\n    'RE',\n    'READ',\n    'REALESTATE',\n    'REALTOR',\n    'REALTY',\n    'RECIPES',\n    'RED',\n    'REDSTONE',\n    'REDUMBRELLA',\n    'REHAB',\n    'REISE',\n    'REISEN',\n    'REIT',\n    'RELIANCE',\n    'REN',\n    'RENT',\n    'RENTALS',\n    'REPAIR',\n    'REPORT',\n    'REPUBLICAN',\n    'REST',\n    'RESTAURANT',\n    'REVIEW',\n    'REVIEWS',\n    'REXROTH',\n    'RICH',\n    'RICHARDLI',\n    'RICOH',\n    'RIL',\n    'RIO',\n    'RIP',\n    'RO',\n    'ROCKS',\n    'RODEO',\n    'ROGERS',\n    'ROOM',\n    'RS',\n    'RSVP',\n    'RU',\n    'RUGBY',\n    'RUHR',\n    'RUN',\n    'RW',\n    'RWE',\n    'RYUKYU',\n    'SA',\n    'SAARLAND',\n    'SAFE',\n    'SAFETY',\n    'SAKURA',\n    'SALE',\n    'SALON',\n    'SAMSCLUB',\n    'SAMSUNG',\n    'SANDVIK',\n    'SANDVIKCOROMANT',\n    'SANOFI',\n    'SAP',\n    'SARL',\n    'SAS',\n    'SAVE',\n    'SAXO',\n    'SB',\n    'SBI',\n    'SBS',\n    'SC',\n    'SCB',\n    'SCHAEFFLER',\n    'SCHMIDT',\n    'SCHOLARSHIPS',\n    'SCHOOL',\n    'SCHULE',\n    'SCHWARZ',\n    'SCIENCE',\n    'SCOT',\n    'SD',\n    'SE',\n    'SEARCH',\n    'SEAT',\n    'SECURE',\n    'SECURITY',\n    'SEEK',\n    'SELECT',\n    'SENER',\n    'SERVICES',\n    'SEVEN',\n    'SEW',\n    'SEX',\n    'SEXY',\n    'SFR',\n    'SG',\n    'SH',\n    'SHANGRILA',\n    'SHARP',\n    'SHAW',\n    'SHELL',\n    'SHIA',\n    'SHIKSHA',\n    'SHOES',\n    'SHOP',\n    'SHOPPING',\n    'SHOUJI',\n    'SHOW',\n    'SI',\n    'SILK',\n    'SINA',\n    'SINGLES',\n    'SITE',\n    'SJ',\n    'SK',\n    'SKI',\n    'SKIN',\n    'SKY',\n    'SKYPE',\n    'SL',\n    'SLING',\n    'SM',\n    'SMART',\n    'SMILE',\n    'SN',\n    'SNCF',\n    'SO',\n    'SOCCER',\n    'SOCIAL',\n    'SOFTBANK',\n    'SOFTWARE',\n    'SOHU',\n    'SOLAR',\n    'SOLUTIONS',\n    'SONG',\n    'SONY',\n    'SOY',\n    'SPA',\n    'SPACE',\n    'SPORT',\n    'SPOT',\n    'SR',\n    'SRL',\n    'SS',\n    'ST',\n    'STADA',\n    'STAPLES',\n    'STAR',\n    'STATEBANK',\n    'STATEFARM',\n    'STC',\n    'STCGROUP',\n    'STOCKHOLM',\n    'STORAGE',\n    'STORE',\n    'STREAM',\n    'STUDIO',\n    'STUDY',\n    'STYLE',\n    'SU',\n    'SUCKS',\n    'SUPPLIES',\n    'SUPPLY',\n    'SUPPORT',\n    'SURF',\n    'SURGERY',\n    'SUZUKI',\n    'SV',\n    'SWATCH',\n    'SWISS',\n    'SX',\n    'SY',\n    'SYDNEY',\n    'SYSTEMS',\n    'SZ',\n    'TAB',\n    'TAIPEI',\n    'TALK',\n    'TAOBAO',\n    'TARGET',\n    'TATAMOTORS',\n    'TATAR',\n    'TATTOO',\n    'TAX',\n    'TAXI',\n    'TC',\n    'TCI',\n    'TD',\n    'TDK',\n    'TEAM',\n    'TECH',\n    'TECHNOLOGY',\n    'TEL',\n    'TEMASEK',\n    'TENNIS',\n    'TEVA',\n    'TF',\n    'TG',\n    'TH',\n    'THD',\n    'THEATER',\n    'THEATRE',\n    'TIAA',\n    'TICKETS',\n    'TIENDA',\n    'TIPS',\n    'TIRES',\n    'TIROL',\n    'TJ',\n    'TJMAXX',\n    'TJX',\n    'TK',\n    'TKMAXX',\n    'TL',\n    'TM',\n    'TMALL',\n    'TN',\n    'TO',\n    'TODAY',\n    'TOKYO',\n    'TOOLS',\n    'TOP',\n    'TORAY',\n    'TOSHIBA',\n    'TOTAL',\n    'TOURS',\n    'TOWN',\n    'TOYOTA',\n    'TOYS',\n    'TR',\n    'TRADE',\n    'TRADING',\n    'TRAINING',\n    'TRAVEL',\n    'TRAVELERS',\n    'TRAVELERSINSURANCE',\n    'TRUST',\n    'TRV',\n    'TT',\n    'TUBE',\n    'TUI',\n    'TUNES',\n    'TUSHU',\n    'TV',\n    'TVS',\n    'TW',\n    'TZ',\n    'UA',\n    'UBANK',\n    'UBS',\n    'UG',\n    'UK',\n    'UNICOM',\n    'UNIVERSITY',\n    'UNO',\n    'UOL',\n    'UPS',\n    'US',\n    'UY',\n    'UZ',\n    'VA',\n    'VACATIONS',\n    'VANA',\n    'VANGUARD',\n    'VC',\n    'VE',\n    'VEGAS',\n    'VENTURES',\n    'VERISIGN',\n    'VERSICHERUNG',\n    'VET',\n    'VG',\n    'VI',\n    'VIAJES',\n    'VIDEO',\n    'VIG',\n    'VIKING',\n    'VILLAS',\n    'VIN',\n    'VIP',\n    'VIRGIN',\n    'VISA',\n    'VISION',\n    'VIVA',\n    'VIVO',\n    'VLAANDEREN',\n    'VN',\n    'VODKA',\n    'VOLVO',\n    'VOTE',\n    'VOTING',\n    'VOTO',\n    'VOYAGE',\n    'VU',\n    'WALES',\n    'WALMART',\n    'WALTER',\n    'WANG',\n    'WANGGOU',\n    'WATCH',\n    'WATCHES',\n    'WEATHER',\n    'WEATHERCHANNEL',\n    'WEBCAM',\n    'WEBER',\n    'WEBSITE',\n    'WED',\n    'WEDDING',\n    'WEIBO',\n    'WEIR',\n    'WF',\n    'WHOSWHO',\n    'WIEN',\n    'WIKI',\n    'WILLIAMHILL',\n    'WIN',\n    'WINDOWS',\n    'WINE',\n    'WINNERS',\n    'WME',\n    'WOLTERSKLUWER',\n    'WOODSIDE',\n    'WORK',\n    'WORKS',\n    'WORLD',\n    'WOW',\n    'WS',\n    'WTC',\n    'WTF',\n    'XBOX',\n    'XEROX',\n    'XFINITY',\n    'XIHUAN',\n    'XIN',\n    'XN--11B4C3D',\n    'XN--1CK2E1B',\n    'XN--1QQW23A',\n    'XN--2SCRJ9C',\n    'XN--30RR7Y',\n    'XN--3BST00M',\n    'XN--3DS443G',\n    'XN--3E0B707E',\n    'XN--3HCRJ9C',\n    'XN--3PXU8K',\n    'XN--42C2D9A',\n    'XN--45BR5CYL',\n    'XN--45BRJ9C',\n    'XN--45Q11C',\n    'XN--4DBRK0CE',\n    'XN--4GBRIM',\n    'XN--54B7FTA0CC',\n    'XN--55QW42G',\n    'XN--55QX5D',\n    'XN--5SU34J936BGSG',\n    'XN--5TZM5G',\n    'XN--6FRZ82G',\n    'XN--6QQ986B3XL',\n    'XN--80ADXHKS',\n    'XN--80AO21A',\n    'XN--80AQECDR1A',\n    'XN--80ASEHDB',\n    'XN--80ASWG',\n    'XN--8Y0A063A',\n    'XN--90A3AC',\n    'XN--90AE',\n    'XN--90AIS',\n    'XN--9DBQ2A',\n    'XN--9ET52U',\n    'XN--9KRT00A',\n    'XN--B4W605FERD',\n    'XN--BCK1B9A5DRE4C',\n    'XN--C1AVG',\n    'XN--C2BR7G',\n    'XN--CCK2B3B',\n    'XN--CCKWCXETD',\n    'XN--CG4BKI',\n    'XN--CLCHC0EA0B2G2A9GCD',\n    'XN--CZR694B',\n    'XN--CZRS0T',\n    'XN--CZRU2D',\n    'XN--D1ACJ3B',\n    'XN--D1ALF',\n    'XN--E1A4C',\n    'XN--ECKVDTC9D',\n    'XN--EFVY88H',\n    'XN--FCT429K',\n    'XN--FHBEI',\n    'XN--FIQ228C5HS',\n    'XN--FIQ64B',\n    'XN--FIQS8S',\n    'XN--FIQZ9S',\n    'XN--FJQ720A',\n    'XN--FLW351E',\n    'XN--FPCRJ9C3D',\n    'XN--FZC2C9E2C',\n    'XN--FZYS8D69UVGM',\n    'XN--G2XX48C',\n    'XN--GCKR3F0F',\n    'XN--GECRJ9C',\n    'XN--GK3AT1E',\n    'XN--H2BREG3EVE',\n    'XN--H2BRJ9C',\n    'XN--H2BRJ9C8C',\n    'XN--HXT814E',\n    'XN--I1B6B1A6A2E',\n    'XN--IMR513N',\n    'XN--IO0A7I',\n    'XN--J1AEF',\n    'XN--J1AMH',\n    'XN--J6W193G',\n    'XN--JLQ480N2RG',\n    'XN--JVR189M',\n    'XN--KCRX77D1X4A',\n    'XN--KPRW13D',\n    'XN--KPRY57D',\n    'XN--KPUT3I',\n    'XN--L1ACC',\n    'XN--LGBBAT1AD8J',\n    'XN--MGB9AWBF',\n    'XN--MGBA3A3EJT',\n    'XN--MGBA3A4F16A',\n    'XN--MGBA7C0BBN0A',\n    'XN--MGBAAM7A8H',\n    'XN--MGBAB2BD',\n    'XN--MGBAH1A3HJKRD',\n    'XN--MGBAI9AZGQP6J',\n    'XN--MGBAYH7GPA',\n    'XN--MGBBH1A',\n    'XN--MGBBH1A71E',\n    'XN--MGBC0A9AZCG',\n    'XN--MGBCA7DZDO',\n    'XN--MGBCPQ6GPA1A',\n    'XN--MGBERP4A5D4AR',\n    'XN--MGBGU82A',\n    'XN--MGBI4ECEXP',\n    'XN--MGBPL2FH',\n    'XN--MGBT3DHD',\n    'XN--MGBTX2B',\n    'XN--MGBX4CD0AB',\n    'XN--MIX891F',\n    'XN--MK1BU44C',\n    'XN--MXTQ1M',\n    'XN--NGBC5AZD',\n    'XN--NGBE9E0A',\n    'XN--NGBRX',\n    'XN--NODE',\n    'XN--NQV7F',\n    'XN--NQV7FS00EMA',\n    'XN--NYQY26A',\n    'XN--O3CW4H',\n    'XN--OGBPF8FL',\n    'XN--OTU796D',\n    'XN--P1ACF',\n    'XN--P1AI',\n    'XN--PGBS0DH',\n    'XN--PSSY2U',\n    'XN--Q7CE6A',\n    'XN--Q9JYB4C',\n    'XN--QCKA1PMC',\n    'XN--QXA6A',\n    'XN--QXAM',\n    'XN--RHQV96G',\n    'XN--ROVU88B',\n    'XN--RVC1E0AM3E',\n    'XN--S9BRJ9C',\n    'XN--SES554G',\n    'XN--T60B56A',\n    'XN--TCKWE',\n    'XN--TIQ49XQYJ',\n    'XN--UNUP4Y',\n    'XN--VERMGENSBERATER-CTB',\n    'XN--VERMGENSBERATUNG-PWB',\n    'XN--VHQUV',\n    'XN--VUQ861B',\n    'XN--W4R85EL8FHU5DNRA',\n    'XN--W4RS40L',\n    'XN--WGBH1C',\n    'XN--WGBL6A',\n    'XN--XHQ521B',\n    'XN--XKC2AL3HYE2A',\n    'XN--XKC2DL3A5EE0H',\n    'XN--Y9A3AQ',\n    'XN--YFRO4I67O',\n    'XN--YGBI2AMMX',\n    'XN--ZFR164B',\n    'XXX',\n    'XYZ',\n    'YACHTS',\n    'YAHOO',\n    'YAMAXUN',\n    'YANDEX',\n    'YE',\n    'YODOBASHI',\n    'YOGA',\n    'YOKOHAMA',\n    'YOU',\n    'YOUTUBE',\n    'YT',\n    'YUN',\n    'ZA',\n    'ZAPPOS',\n    'ZARA',\n    'ZERO',\n    'ZIP',\n    'ZM',\n    'ZONE',\n    'ZUERICH',\n    'ZW'\n];\n\n\n// Keep as upper-case to make updating from source easier\n\nmodule.exports = new Set(internals.tlds.map((tld) => tld.toLowerCase()));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sideway/address/lib/tlds.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sideway/address/lib/uri.js":
/*!**************************************************!*\
  !*** ./node_modules/@sideway/address/lib/uri.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nconst Assert = __webpack_require__(/*! @hapi/hoek/lib/assert */ \"(rsc)/./node_modules/@hapi/hoek/lib/assert.js\");\nconst EscapeRegex = __webpack_require__(/*! @hapi/hoek/lib/escapeRegex */ \"(rsc)/./node_modules/@hapi/hoek/lib/escapeRegex.js\");\n\n\nconst internals = {};\n\n\ninternals.generate = function () {\n\n    const rfc3986 = {};\n\n    const hexDigit = '\\\\dA-Fa-f';                                               // HEXDIG = DIGIT / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\"\n    const hexDigitOnly = '[' + hexDigit + ']';\n\n    const unreserved = '\\\\w-\\\\.~';                                              // unreserved = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n    const subDelims = '!\\\\$&\\'\\\\(\\\\)\\\\*\\\\+,;=';                                 // sub-delims = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n    const pctEncoded = '%' + hexDigit;                                          // pct-encoded = \"%\" HEXDIG HEXDIG\n    const pchar = unreserved + pctEncoded + subDelims + ':@';                   // pchar = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n    const pcharOnly = '[' + pchar + ']';\n    const decOctect = '(?:0{0,2}\\\\d|0?[1-9]\\\\d|1\\\\d\\\\d|2[0-4]\\\\d|25[0-5])';     // dec-octet = DIGIT / %x31-39 DIGIT / \"1\" 2DIGIT / \"2\" %x30-34 DIGIT / \"25\" %x30-35  ; 0-9 / 10-99 / 100-199 / 200-249 / 250-255\n\n    rfc3986.ipv4address = '(?:' + decOctect + '\\\\.){3}' + decOctect;            // IPv4address = dec-octet \".\" dec-octet \".\" dec-octet \".\" dec-octet\n\n    /*\n        h16 = 1*4HEXDIG ; 16 bits of address represented in hexadecimal\n        ls32 = ( h16 \":\" h16 ) / IPv4address ; least-significant 32 bits of address\n        IPv6address =                            6( h16 \":\" ) ls32\n                    /                       \"::\" 5( h16 \":\" ) ls32\n                    / [               h16 ] \"::\" 4( h16 \":\" ) ls32\n                    / [ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n                    / [ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n                    / [ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n                    / [ *4( h16 \":\" ) h16 ] \"::\"              ls32\n                    / [ *5( h16 \":\" ) h16 ] \"::\"              h16\n                    / [ *6( h16 \":\" ) h16 ] \"::\"\n    */\n\n    const h16 = hexDigitOnly + '{1,4}';\n    const ls32 = '(?:' + h16 + ':' + h16 + '|' + rfc3986.ipv4address + ')';\n    const IPv6SixHex = '(?:' + h16 + ':){6}' + ls32;\n    const IPv6FiveHex = '::(?:' + h16 + ':){5}' + ls32;\n    const IPv6FourHex = '(?:' + h16 + ')?::(?:' + h16 + ':){4}' + ls32;\n    const IPv6ThreeHex = '(?:(?:' + h16 + ':){0,1}' + h16 + ')?::(?:' + h16 + ':){3}' + ls32;\n    const IPv6TwoHex = '(?:(?:' + h16 + ':){0,2}' + h16 + ')?::(?:' + h16 + ':){2}' + ls32;\n    const IPv6OneHex = '(?:(?:' + h16 + ':){0,3}' + h16 + ')?::' + h16 + ':' + ls32;\n    const IPv6NoneHex = '(?:(?:' + h16 + ':){0,4}' + h16 + ')?::' + ls32;\n    const IPv6NoneHex2 = '(?:(?:' + h16 + ':){0,5}' + h16 + ')?::' + h16;\n    const IPv6NoneHex3 = '(?:(?:' + h16 + ':){0,6}' + h16 + ')?::';\n\n    rfc3986.ipv4Cidr = '(?:\\\\d|[1-2]\\\\d|3[0-2])';                                           // IPv4 cidr = DIGIT / %x31-32 DIGIT / \"3\" %x30-32  ; 0-9 / 10-29 / 30-32\n    rfc3986.ipv6Cidr = '(?:0{0,2}\\\\d|0?[1-9]\\\\d|1[01]\\\\d|12[0-8])';                         // IPv6 cidr = DIGIT / %x31-39 DIGIT / \"1\" %x0-1 DIGIT / \"12\" %x0-8;   0-9 / 10-99 / 100-119 / 120-128\n    rfc3986.ipv6address = '(?:' + IPv6SixHex + '|' + IPv6FiveHex + '|' + IPv6FourHex + '|' + IPv6ThreeHex + '|' + IPv6TwoHex + '|' + IPv6OneHex + '|' + IPv6NoneHex + '|' + IPv6NoneHex2 + '|' + IPv6NoneHex3 + ')';\n    rfc3986.ipvFuture = 'v' + hexDigitOnly + '+\\\\.[' + unreserved + subDelims + ':]+';      // IPvFuture = \"v\" 1*HEXDIG \".\" 1*( unreserved / sub-delims / \":\" )\n\n    rfc3986.scheme = '[a-zA-Z][a-zA-Z\\\\d+-\\\\.]*';                                           // scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    rfc3986.schemeRegex = new RegExp(rfc3986.scheme);\n\n    const userinfo = '[' + unreserved + pctEncoded + subDelims + ':]*';                     // userinfo = *( unreserved / pct-encoded / sub-delims / \":\" )\n    const IPLiteral = '\\\\[(?:' + rfc3986.ipv6address + '|' + rfc3986.ipvFuture + ')\\\\]';    // IP-literal = \"[\" ( IPv6address / IPvFuture  ) \"]\"\n    const regName = '[' + unreserved + pctEncoded + subDelims + ']{1,255}';                 // reg-name = *( unreserved / pct-encoded / sub-delims )\n    const host = '(?:' + IPLiteral + '|' + rfc3986.ipv4address + '|' + regName + ')';       // host = IP-literal / IPv4address / reg-name\n    const port = '\\\\d*';                                                                    // port = *DIGIT\n    const authority = '(?:' + userinfo + '@)?' + host + '(?::' + port + ')?';               // authority   = [ userinfo \"@\" ] host [ \":\" port ]\n    const authorityCapture = '(?:' + userinfo + '@)?(' + host + ')(?::' + port + ')?';\n\n    /*\n        segment       = *pchar\n        segment-nz    = 1*pchar\n        path          = path-abempty    ; begins with \"/\" '|' is empty\n                    / path-absolute   ; begins with \"/\" but not \"//\"\n                    / path-noscheme   ; begins with a non-colon segment\n                    / path-rootless   ; begins with a segment\n                    / path-empty      ; zero characters\n        path-abempty  = *( \"/\" segment )\n        path-absolute = \"/\" [ segment-nz *( \"/\" segment ) ]\n        path-rootless = segment-nz *( \"/\" segment )\n    */\n\n    const segment = pcharOnly + '*';\n    const segmentNz = pcharOnly + '+';\n    const segmentNzNc = '[' + unreserved + pctEncoded + subDelims + '@' + ']+';\n    const pathEmpty = '';\n    const pathAbEmpty = '(?:\\\\/' + segment + ')*';\n    const pathAbsolute = '\\\\/(?:' + segmentNz + pathAbEmpty + ')?';\n    const pathRootless = segmentNz + pathAbEmpty;\n    const pathNoScheme = segmentNzNc + pathAbEmpty;\n    const pathAbNoAuthority = '(?:\\\\/\\\\/\\\\/' + segment + pathAbEmpty + ')';     // Used by file:///\n\n    // hier-part = \"//\" authority path\n\n    rfc3986.hierPart = '(?:' + '(?:\\\\/\\\\/' + authority + pathAbEmpty + ')' + '|' + pathAbsolute + '|' + pathRootless + '|' + pathAbNoAuthority + ')';\n    rfc3986.hierPartCapture = '(?:' + '(?:\\\\/\\\\/' + authorityCapture + pathAbEmpty + ')' + '|' + pathAbsolute + '|' + pathRootless + ')';\n\n    // relative-part = \"//\" authority path-abempty / path-absolute / path-noscheme / path-empty\n\n    rfc3986.relativeRef = '(?:' + '(?:\\\\/\\\\/' + authority + pathAbEmpty + ')' + '|' + pathAbsolute + '|' + pathNoScheme + '|' + pathEmpty + ')';\n    rfc3986.relativeRefCapture = '(?:' + '(?:\\\\/\\\\/' + authorityCapture + pathAbEmpty + ')' + '|' + pathAbsolute + '|' + pathNoScheme + '|' + pathEmpty + ')';\n\n    // query = *( pchar / \"/\" / \"?\" )\n    // query = *( pchar / \"[\" / \"]\" / \"/\" / \"?\" )\n\n    rfc3986.query = '[' + pchar + '\\\\/\\\\?]*(?=#|$)';                            //Finish matching either at the fragment part '|' end of the line.\n    rfc3986.queryWithSquareBrackets = '[' + pchar + '\\\\[\\\\]\\\\/\\\\?]*(?=#|$)';\n\n    // fragment = *( pchar / \"/\" / \"?\" )\n\n    rfc3986.fragment = '[' + pchar + '\\\\/\\\\?]*';\n\n    return rfc3986;\n};\n\ninternals.rfc3986 = internals.generate();\n\n\nexports.ip = {\n    v4Cidr: internals.rfc3986.ipv4Cidr,\n    v6Cidr: internals.rfc3986.ipv6Cidr,\n    ipv4: internals.rfc3986.ipv4address,\n    ipv6: internals.rfc3986.ipv6address,\n    ipvfuture: internals.rfc3986.ipvFuture\n};\n\n\ninternals.createRegex = function (options) {\n\n    const rfc = internals.rfc3986;\n\n    // Construct expression\n\n    const query = options.allowQuerySquareBrackets ? rfc.queryWithSquareBrackets : rfc.query;\n    const suffix = '(?:\\\\?' + query + ')?' + '(?:#' + rfc.fragment + ')?';\n\n    // relative-ref = relative-part [ \"?\" query ] [ \"#\" fragment ]\n\n    const relative = options.domain ? rfc.relativeRefCapture : rfc.relativeRef;\n\n    if (options.relativeOnly) {\n        return internals.wrap(relative + suffix);\n    }\n\n    // Custom schemes\n\n    let customScheme = '';\n    if (options.scheme) {\n        Assert(options.scheme instanceof RegExp || typeof options.scheme === 'string' || Array.isArray(options.scheme), 'scheme must be a RegExp, String, or Array');\n\n        const schemes = [].concat(options.scheme);\n        Assert(schemes.length >= 1, 'scheme must have at least 1 scheme specified');\n\n        // Flatten the array into a string to be used to match the schemes\n\n        const selections = [];\n        for (let i = 0; i < schemes.length; ++i) {\n            const scheme = schemes[i];\n            Assert(scheme instanceof RegExp || typeof scheme === 'string', 'scheme at position ' + i + ' must be a RegExp or String');\n\n            if (scheme instanceof RegExp) {\n                selections.push(scheme.source.toString());\n            }\n            else {\n                Assert(rfc.schemeRegex.test(scheme), 'scheme at position ' + i + ' must be a valid scheme');\n                selections.push(EscapeRegex(scheme));\n            }\n        }\n\n        customScheme = selections.join('|');\n    }\n\n    // URI = scheme \":\" hier-part [ \"?\" query ] [ \"#\" fragment ]\n\n    const scheme = customScheme ? '(?:' + customScheme + ')' : rfc.scheme;\n    const absolute = '(?:' + scheme + ':' + (options.domain ? rfc.hierPartCapture : rfc.hierPart) + ')';\n    const prefix = options.allowRelative ? '(?:' + absolute + '|' + relative + ')' : absolute;\n    return internals.wrap(prefix + suffix, customScheme);\n};\n\n\ninternals.wrap = function (raw, scheme) {\n\n    raw = `(?=.)(?!https?\\:/(?:$|[^/]))(?!https?\\:///)(?!https?\\:[^/])${raw}`;     // Require at least one character and explicitly forbid 'http:/' or HTTP with empty domain\n\n    return {\n        raw,\n        regex: new RegExp(`^${raw}$`),\n        scheme\n    };\n};\n\n\ninternals.uriRegex = internals.createRegex({});\n\n\nexports.regex = function (options = {}) {\n\n    if (options.scheme ||\n        options.allowRelative ||\n        options.relativeOnly ||\n        options.allowQuerySquareBrackets ||\n        options.domain) {\n\n        return internals.createRegex(options);\n    }\n\n    return internals.uriRegex;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sideway/address/lib/uri.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sideway/formula/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@sideway/formula/lib/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nconst internals = {\n    operators: ['!', '^', '*', '/', '%', '+', '-', '<', '<=', '>', '>=', '==', '!=', '&&', '||', '??'],\n    operatorCharacters: ['!', '^', '*', '/', '%', '+', '-', '<', '=', '>', '&', '|', '?'],\n    operatorsOrder: [['^'], ['*', '/', '%'], ['+', '-'], ['<', '<=', '>', '>='], ['==', '!='], ['&&'], ['||', '??']],\n    operatorsPrefix: ['!', 'n'],\n\n    literals: {\n        '\"': '\"',\n        '`': '`',\n        '\\'': '\\'',\n        '[': ']'\n    },\n\n    numberRx: /^(?:[0-9]*(\\.[0-9]*)?){1}$/,\n    tokenRx: /^[\\w\\$\\#\\.\\@\\:\\{\\}]+$/,\n\n    symbol: Symbol('formula'),\n    settings: Symbol('settings')\n};\n\n\nexports.Parser = class {\n\n    constructor(string, options = {}) {\n\n        if (!options[internals.settings] &&\n            options.constants) {\n\n            for (const constant in options.constants) {\n                const value = options.constants[constant];\n                if (value !== null &&\n                    !['boolean', 'number', 'string'].includes(typeof value)) {\n\n                    throw new Error(`Formula constant ${constant} contains invalid ${typeof value} value type`);\n                }\n            }\n        }\n\n        this.settings = options[internals.settings] ? options : Object.assign({ [internals.settings]: true, constants: {}, functions: {} }, options);\n        this.single = null;\n\n        this._parts = null;\n        this._parse(string);\n    }\n\n    _parse(string) {\n\n        let parts = [];\n        let current = '';\n        let parenthesis = 0;\n        let literal = false;\n\n        const flush = (inner) => {\n\n            if (parenthesis) {\n                throw new Error('Formula missing closing parenthesis');\n            }\n\n            const last = parts.length ? parts[parts.length - 1] : null;\n\n            if (!literal &&\n                !current &&\n                !inner) {\n\n                return;\n            }\n\n            if (last &&\n                last.type === 'reference' &&\n                inner === ')') {                                                                // Function\n\n                last.type = 'function';\n                last.value = this._subFormula(current, last.value);\n                current = '';\n                return;\n            }\n\n            if (inner === ')') {                                                                // Segment\n                const sub = new exports.Parser(current, this.settings);\n                parts.push({ type: 'segment', value: sub });\n            }\n            else if (literal) {\n                if (literal === ']') {                                                          // Reference\n                    parts.push({ type: 'reference', value: current });\n                    current = '';\n                    return;\n                }\n\n                parts.push({ type: 'literal', value: current });                                // Literal\n            }\n            else if (internals.operatorCharacters.includes(current)) {                          // Operator\n                if (last &&\n                    last.type === 'operator' &&\n                    internals.operators.includes(last.value + current)) {                       // 2 characters operator\n\n                    last.value += current;\n                }\n                else {\n                    parts.push({ type: 'operator', value: current });\n                }\n            }\n            else if (current.match(internals.numberRx)) {                                       // Number\n                parts.push({ type: 'constant', value: parseFloat(current) });\n            }\n            else if (this.settings.constants[current] !== undefined) {                          // Constant\n                parts.push({ type: 'constant', value: this.settings.constants[current] });\n            }\n            else {                                                                              // Reference\n                if (!current.match(internals.tokenRx)) {\n                    throw new Error(`Formula contains invalid token: ${current}`);\n                }\n\n                parts.push({ type: 'reference', value: current });\n            }\n\n            current = '';\n        };\n\n        for (const c of string) {\n            if (literal) {\n                if (c === literal) {\n                    flush();\n                    literal = false;\n                }\n                else {\n                    current += c;\n                }\n            }\n            else if (parenthesis) {\n                if (c === '(') {\n                    current += c;\n                    ++parenthesis;\n                }\n                else if (c === ')') {\n                    --parenthesis;\n                    if (!parenthesis) {\n                        flush(c);\n                    }\n                    else {\n                        current += c;\n                    }\n                }\n                else {\n                    current += c;\n                }\n            }\n            else if (c in internals.literals) {\n                literal = internals.literals[c];\n            }\n            else if (c === '(') {\n                flush();\n                ++parenthesis;\n            }\n            else if (internals.operatorCharacters.includes(c)) {\n                flush();\n                current = c;\n                flush();\n            }\n            else if (c !== ' ') {\n                current += c;\n            }\n            else {\n                flush();\n            }\n        }\n\n        flush();\n\n        // Replace prefix - to internal negative operator\n\n        parts = parts.map((part, i) => {\n\n            if (part.type !== 'operator' ||\n                part.value !== '-' ||\n                i && parts[i - 1].type !== 'operator') {\n\n                return part;\n            }\n\n            return { type: 'operator', value: 'n' };\n        });\n\n        // Validate tokens order\n\n        let operator = false;\n        for (const part of parts) {\n            if (part.type === 'operator') {\n                if (internals.operatorsPrefix.includes(part.value)) {\n                    continue;\n                }\n\n                if (!operator) {\n                    throw new Error('Formula contains an operator in invalid position');\n                }\n\n                if (!internals.operators.includes(part.value)) {\n                    throw new Error(`Formula contains an unknown operator ${part.value}`);\n                }\n            }\n            else if (operator) {\n                throw new Error('Formula missing expected operator');\n            }\n\n            operator = !operator;\n        }\n\n        if (!operator) {\n            throw new Error('Formula contains invalid trailing operator');\n        }\n\n        // Identify single part\n\n        if (parts.length === 1 &&\n            ['reference', 'literal', 'constant'].includes(parts[0].type)) {\n\n            this.single = { type: parts[0].type === 'reference' ? 'reference' : 'value', value: parts[0].value };\n        }\n\n        // Process parts\n\n        this._parts = parts.map((part) => {\n\n            // Operators\n\n            if (part.type === 'operator') {\n                return internals.operatorsPrefix.includes(part.value) ? part : part.value;\n            }\n\n            // Literals, constants, segments\n\n            if (part.type !== 'reference') {\n                return part.value;\n            }\n\n            // References\n\n            if (this.settings.tokenRx &&\n                !this.settings.tokenRx.test(part.value)) {\n\n                throw new Error(`Formula contains invalid reference ${part.value}`);\n            }\n\n            if (this.settings.reference) {\n                return this.settings.reference(part.value);\n            }\n\n            return internals.reference(part.value);\n        });\n    }\n\n    _subFormula(string, name) {\n\n        const method = this.settings.functions[name];\n        if (typeof method !== 'function') {\n            throw new Error(`Formula contains unknown function ${name}`);\n        }\n\n        let args = [];\n        if (string) {\n            let current = '';\n            let parenthesis = 0;\n            let literal = false;\n\n            const flush = () => {\n\n                if (!current) {\n                    throw new Error(`Formula contains function ${name} with invalid arguments ${string}`);\n                }\n\n                args.push(current);\n                current = '';\n            };\n\n            for (let i = 0; i < string.length; ++i) {\n                const c = string[i];\n                if (literal) {\n                    current += c;\n                    if (c === literal) {\n                        literal = false;\n                    }\n                }\n                else if (c in internals.literals &&\n                    !parenthesis) {\n\n                    current += c;\n                    literal = internals.literals[c];\n                }\n                else if (c === ',' &&\n                    !parenthesis) {\n\n                    flush();\n                }\n                else {\n                    current += c;\n                    if (c === '(') {\n                        ++parenthesis;\n                    }\n                    else if (c === ')') {\n                        --parenthesis;\n                    }\n                }\n            }\n\n            flush();\n        }\n\n        args = args.map((arg) => new exports.Parser(arg, this.settings));\n\n        return function (context) {\n\n            const innerValues = [];\n            for (const arg of args) {\n                innerValues.push(arg.evaluate(context));\n            }\n\n            return method.call(context, ...innerValues);\n        };\n    }\n\n    evaluate(context) {\n\n        const parts = this._parts.slice();\n\n        // Prefix operators\n\n        for (let i = parts.length - 2; i >= 0; --i) {\n            const part = parts[i];\n            if (part &&\n                part.type === 'operator') {\n\n                const current = parts[i + 1];\n                parts.splice(i + 1, 1);\n                const value = internals.evaluate(current, context);\n                parts[i] = internals.single(part.value, value);\n            }\n        }\n\n        // Left-right operators\n\n        internals.operatorsOrder.forEach((set) => {\n\n            for (let i = 1; i < parts.length - 1;) {\n                if (set.includes(parts[i])) {\n                    const operator = parts[i];\n                    const left = internals.evaluate(parts[i - 1], context);\n                    const right = internals.evaluate(parts[i + 1], context);\n\n                    parts.splice(i, 2);\n                    const result = internals.calculate(operator, left, right);\n                    parts[i - 1] = result === 0 ? 0 : result;                               // Convert -0\n                }\n                else {\n                    i += 2;\n                }\n            }\n        });\n\n        return internals.evaluate(parts[0], context);\n    }\n};\n\n\nexports.Parser.prototype[internals.symbol] = true;\n\n\ninternals.reference = function (name) {\n\n    return function (context) {\n\n        return context && context[name] !== undefined ? context[name] : null;\n    };\n};\n\n\ninternals.evaluate = function (part, context) {\n\n    if (part === null) {\n        return null;\n    }\n\n    if (typeof part === 'function') {\n        return part(context);\n    }\n\n    if (part[internals.symbol]) {\n        return part.evaluate(context);\n    }\n\n    return part;\n};\n\n\ninternals.single = function (operator, value) {\n\n    if (operator === '!') {\n        return value ? false : true;\n    }\n\n    // operator === 'n'\n\n    const negative = -value;\n    if (negative === 0) {       // Override -0\n        return 0;\n    }\n\n    return negative;\n};\n\n\ninternals.calculate = function (operator, left, right) {\n\n    if (operator === '??') {\n        return internals.exists(left) ? left : right;\n    }\n\n    if (typeof left === 'string' ||\n        typeof right === 'string') {\n\n        if (operator === '+') {\n            left = internals.exists(left) ? left : '';\n            right = internals.exists(right) ? right : '';\n            return left + right;\n        }\n    }\n    else {\n        switch (operator) {\n            case '^': return Math.pow(left, right);\n            case '*': return left * right;\n            case '/': return left / right;\n            case '%': return left % right;\n            case '+': return left + right;\n            case '-': return left - right;\n        }\n    }\n\n    switch (operator) {\n        case '<': return left < right;\n        case '<=': return left <= right;\n        case '>': return left > right;\n        case '>=': return left >= right;\n        case '==': return left === right;\n        case '!=': return left !== right;\n        case '&&': return left && right;\n        case '||': return left || right;\n    }\n\n    return null;\n};\n\n\ninternals.exists = function (value) {\n\n    return value !== null && value !== undefined;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sideway/formula/lib/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sideway/pinpoint/lib/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sideway/pinpoint/lib/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nconst internals = {};\n\n\nexports.location = function (depth = 0) {\n\n    const orig = Error.prepareStackTrace;\n    Error.prepareStackTrace = (ignore, stack) => stack;\n\n    const capture = {};\n    Error.captureStackTrace(capture, this);\n    const line = capture.stack[depth + 1];\n\n    Error.prepareStackTrace = orig;\n\n    return {\n        filename: line.getFileName(),\n        line: line.getLineNumber()\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpZGV3YXkvcGlucG9pbnQvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOzs7QUFHQSxnQkFBZ0I7O0FBRWhCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWF1dGgwLy4vbm9kZV9tb2R1bGVzL0BzaWRld2F5L3BpbnBvaW50L2xpYi9pbmRleC5qcz82YjVjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgaW50ZXJuYWxzID0ge307XG5cblxuZXhwb3J0cy5sb2NhdGlvbiA9IGZ1bmN0aW9uIChkZXB0aCA9IDApIHtcblxuICAgIGNvbnN0IG9yaWcgPSBFcnJvci5wcmVwYXJlU3RhY2tUcmFjZTtcbiAgICBFcnJvci5wcmVwYXJlU3RhY2tUcmFjZSA9IChpZ25vcmUsIHN0YWNrKSA9PiBzdGFjaztcblxuICAgIGNvbnN0IGNhcHR1cmUgPSB7fTtcbiAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZShjYXB0dXJlLCB0aGlzKTtcbiAgICBjb25zdCBsaW5lID0gY2FwdHVyZS5zdGFja1tkZXB0aCArIDFdO1xuXG4gICAgRXJyb3IucHJlcGFyZVN0YWNrVHJhY2UgPSBvcmlnO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgZmlsZW5hbWU6IGxpbmUuZ2V0RmlsZU5hbWUoKSxcbiAgICAgICAgbGluZTogbGluZS5nZXRMaW5lTnVtYmVyKClcbiAgICB9O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sideway/pinpoint/lib/index.js\n");

/***/ })

};
;